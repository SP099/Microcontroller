

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed May 31 19:35:15 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234                           
   235                           	psect	idataBANK0
   236  0695                     __pidataBANK0:
   237                           
   238                           ;initializer for main@F861
   239  0695  3448               	retlw	72
   240  0696  3465               	retlw	101
   241  0697  346C               	retlw	108
   242  0698  346C               	retlw	108
   243  0699  346F               	retlw	111
   244  069A  345F               	retlw	95
   245  069B  345F               	retlw	95
   246  069C  345F               	retlw	95
   247  069D  345F               	retlw	95
   248  069E  345F               	retlw	95
   249  069F  345F               	retlw	95
   250  06A0  345F               	retlw	95
   251  06A1  3400               	retlw	0
   252  0008                     _PORTD	set	8
   253  0049                     _RE1	set	73
   254  004A                     _RE2	set	74
   255  0088                     _TRISD	set	136
   256  0449                     _TRISE1	set	1097
   257  044A                     _TRISE2	set	1098
   258                           
   259                           	psect	strings
   260  0003                     __pstrings:
   261  0003                     stringtab:
   262  0003                     __stringtab:
   263                           
   264                           ;	String table - string pointers are 1 byte each
   265  0003  1BFF               	btfsc	btemp+1,7
   266  0004  280D               	ljmp	stringcode
   267  0005  1383               	bcf	3,7
   268  0006  187F               	btfsc	btemp+1,0
   269  0007  1783               	bsf	3,7
   270  0008  0800               	movf	0,w
   271  0009  0A84               	incf	4,f
   272  000A  1903               	skipnz
   273  000B  0AFF               	incf	btemp+1,f
   274  000C  0008               	return
   275  000D                     stringcode:
   276  000D                     stringdir:
   277  000D  3000               	movlw	high stringdir
   278  000E  008A               	movwf	10
   279  000F  0804               	movf	4,w
   280  0010  0A84               	incf	4,f
   281  0011  0782               	addwf	2,f
   282  0012                     __stringbase:
   283  0012  3400               	retlw	0
   284  0013                     __end_of__stringtab:
   285  0013                     STR_1:
   286  0013  3452               	retlw	82	;'R'
   287  0014  3469               	retlw	105	;'i'
   288  0015  3467               	retlw	103	;'g'
   289  0016  3468               	retlw	104	;'h'
   290  0017  3474               	retlw	116	;'t'
   291  0018  3420               	retlw	32	;' '
   292  0019  3453               	retlw	83	;'S'
   293  001A  3463               	retlw	99	;'c'
   294  001B  3472               	retlw	114	;'r'
   295  001C  346F               	retlw	111	;'o'
   296  001D  346C               	retlw	108	;'l'
   297  001E  346C               	retlw	108	;'l'
   298  001F  3469               	retlw	105	;'i'
   299  0020  346E               	retlw	110	;'n'
   300  0021  3467               	retlw	103	;'g'
   301  0022  3400               	retlw	0
   302                           
   303                           	psect	cinit
   304  07EE                     start_initialization:	
   305                           ; #config settings
   306                           
   307  07EE                     __initialization:
   308                           
   309                           ; Initialize objects allocated to BANK0
   310  07EE  1383               	bcf	3,7	;select IRP bank0
   311  07EF  303F               	movlw	low (__pdataBANK0+13)
   312  07F0  00FD               	movwf	btemp+-1
   313  07F1  3006               	movlw	high __pidataBANK0
   314  07F2  00FE               	movwf	btemp
   315  07F3  3095               	movlw	low __pidataBANK0
   316  07F4  00FF               	movwf	btemp+1
   317  07F5  3032               	movlw	low __pdataBANK0
   318  07F6  0084               	movwf	4
   319  07F7  120A  118A  26A6  120A  118A  	fcall	init_ram0
   320  07FC                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323  07FC                     __end_of__initialization:
   324  07FC  0183               	clrf	3
   325  07FD  120A  118A  2F7D   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	dataBANK0
   328  0032                     __pdataBANK0:
   329  0032                     main@F861:
   330  0032                     	ds	13
   331                           
   332                           	psect	inittext
   333  06A2                     init_fetch0:	
   334                           ;	Called with low address in FSR and high address in W
   335                           
   336  06A2  087E               	movf	btemp,w
   337  06A3  008A               	movwf	10
   338  06A4  087F               	movf	btemp+1,w
   339  06A5  0082               	movwf	2
   340  06A6                     init_ram0:	
   341                           ;Called with:
   342                           ;	high address of idata address in btemp 
   343                           ;	low address of idata address in btemp+1 
   344                           ;	low address of data in FSR
   345                           ;	high address + 1 of data in btemp-1
   346                           
   347  06A6  120A  118A  26A2  120A  118A  	fcall	init_fetch0
   348  06AB  0080               	movwf	0
   349  06AC  0A84               	incf	4,f
   350  06AD  0804               	movf	4,w
   351  06AE  067D               	xorwf	btemp+-1,w
   352  06AF  1903               	btfsc	3,2
   353  06B0  3400               	retlw	0
   354  06B1  0AFF               	incf	btemp+1,f
   355  06B2  1903               	btfsc	3,2
   356  06B3  0AFE               	incf	btemp,f
   357  06B4  2EA6               	goto	init_ram0
   358                           
   359                           	psect	cstackCOMMON
   360  0070                     __pcstackCOMMON:
   361  0070                     ?_clcd_write:
   362  0070                     ?_init_display_controller:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_init_clcd:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_init_config:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_main:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     clcd_write@mode:	
   375                           ; 1 bytes @ 0x0
   376                           
   377                           
   378                           ; 1 bytes @ 0x0
   379  0070                     	ds	1
   380  0071                     ??_clcd_write:
   381                           
   382                           ; 1 bytes @ 0x1
   383  0071                     	ds	2
   384  0073                     clcd_write@byte:
   385                           
   386                           ; 1 bytes @ 0x3
   387  0073                     	ds	1
   388  0074                     ??_init_display_controller:
   389  0074                     ?_clcd_print:	
   390                           ; 1 bytes @ 0x4
   391                           
   392  0074                     clcd_print@str:	
   393                           ; 1 bytes @ 0x4
   394                           
   395                           
   396                           ; 2 bytes @ 0x4
   397  0074                     	ds	2
   398  0076                     ??_init_clcd:
   399  0076                     ??_init_config:	
   400                           ; 1 bytes @ 0x6
   401                           
   402  0076                     clcd_print@addr:	
   403                           ; 1 bytes @ 0x6
   404                           
   405                           
   406                           ; 1 bytes @ 0x6
   407  0076                     	ds	1
   408  0077                     ??_clcd_print:
   409  0077                     ??_main:	
   410                           ; 1 bytes @ 0x7
   411                           
   412                           
   413                           ; 1 bytes @ 0x7
   414  0077                     	ds	4
   415                           
   416                           	psect	cstackBANK0
   417  0020                     __pcstackBANK0:
   418  0020                     main@message:
   419                           
   420                           ; 13 bytes @ 0x0
   421  0020                     	ds	13
   422  002D                     main@wait:
   423                           
   424                           ; 2 bytes @ 0xD
   425  002D                     	ds	2
   426  002F                     main@temp:
   427                           
   428                           ; 1 bytes @ 0xF
   429  002F                     	ds	1
   430  0030                     main@i:
   431                           
   432                           ; 2 bytes @ 0x10
   433  0030                     	ds	2
   434                           
   435                           	psect	maintext
   436  077D                     __pmaintext:	
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 19 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  i               2   16[BANK0 ] int 
   447 ;;  message        13    0[BANK0 ] unsigned char [13]
   448 ;;  wait            2   13[BANK0 ] unsigned int 
   449 ;;  temp            1   15[BANK0 ] unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : B00/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         0      18       0       0       0
   461 ;;      Temps:          4       0       0       0       0
   462 ;;      Totals:         4      18       0       0       0
   463 ;;Total ram usage:       22 bytes
   464 ;; Hardware stack levels required when called:    4
   465 ;; This function calls:
   466 ;;		_clcd_print
   467 ;;		_init_config
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           
   474                           ;psect for function _main
   475  077D                     _main:
   476  077D                     l798:	
   477                           ;incstack = 0
   478                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   479                           
   480                           
   481                           ;main.c: 21:         }
   482  077D  120A  118A  2684  120A  118A  	fcall	_init_config
   483  0782                     l800:
   484                           
   485                           ;main.c: 22:         message[0] = temp;;main.c: 23: ;main.c: 24:         clcd_print(mess
      +                          age, (0xC0 + 0));
   486  0782  3020               	movlw	main@message& (0+255)
   487  0783  0084               	movwf	4
   488  0784  3032               	movlw	low main@F861
   489  0785  00F7               	movwf	??_main
   490  0786  0804               	movf	4,w
   491  0787  00F8               	movwf	??_main+1
   492  0788  300D               	movlw	13
   493  0789  00F9               	movwf	??_main+2
   494  078A                     u110:
   495  078A  0877               	movf	??_main,w
   496  078B  0084               	movwf	4
   497  078C  1383               	bcf	3,7	;select IRP bank0
   498  078D  0800               	movf	0,w
   499  078E  00FA               	movwf	??_main+3
   500  078F  0AF7               	incf	??_main,f
   501  0790  0878               	movf	??_main+1,w
   502  0791  0084               	movwf	4
   503  0792  087A               	movf	??_main+3,w
   504  0793  0080               	movwf	0
   505  0794  0AF8               	incf	??_main+1,f
   506  0795  0BF9               	decfsz	??_main+2,f
   507  0796  2F8A               	goto	u110
   508  0797                     l802:
   509                           
   510                           ;main.c: 27:         {;main.c: 29:         }
   511  0797  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   512  0798  00F4               	movwf	clcd_print@str
   513  0799  3080               	movlw	128
   514  079A  00F5               	movwf	clcd_print@str+1
   515  079B  3080               	movlw	128
   516  079C  00FF               	movwf	btemp+1
   517  079D  087F               	movf	btemp+1,w
   518  079E  00F6               	movwf	clcd_print@addr
   519  079F  120A  118A  26B5  120A  118A  	fcall	_clcd_print
   520                           
   521                           ;main.c: 31:     return;
   522  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   523  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   524  07A6  082B               	movf	main@message+11,w
   525  07A7  00FF               	movwf	btemp+1
   526  07A8  087F               	movf	btemp+1,w
   527  07A9  00AF               	movwf	main@temp
   528  07AA                     l804:
   529                           
   530                           ;main.c: 32: }
   531  07AA  300C               	movlw	12
   532  07AB  00B0               	movwf	main@i
   533  07AC  3000               	movlw	0
   534  07AD  00B1               	movwf	main@i+1
   535  07AE                     l810:
   536  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   537  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   538  07B0  0830               	movf	main@i,w
   539  07B1  3EFF               	addlw	255
   540  07B2  3E20               	addlw	(low (main@message| 0))& (0+255)
   541  07B3  0084               	movwf	4
   542  07B4  1383               	bcf	3,7	;select IRP bank0
   543  07B5  0800               	movf	0,w
   544  07B6  00FF               	movwf	btemp+1
   545  07B7  0830               	movf	main@i,w
   546  07B8  3E20               	addlw	(low (main@message| 0))& (0+255)
   547  07B9  0084               	movwf	4
   548  07BA  087F               	movf	btemp+1,w
   549  07BB  0080               	movwf	0
   550  07BC                     l812:
   551  07BC  30FF               	movlw	255
   552  07BD  07B0               	addwf	main@i,f
   553  07BE  1803               	skipnc
   554  07BF  0AB1               	incf	main@i+1,f
   555  07C0  30FF               	movlw	255
   556  07C1  07B1               	addwf	main@i+1,f
   557  07C2                     l814:
   558  07C2  0831               	movf	main@i+1,w
   559  07C3  3A80               	xorlw	128
   560  07C4  00FF               	movwf	btemp+1
   561  07C5  3080               	movlw	128
   562  07C6  027F               	subwf	btemp+1,w
   563  07C7  1D03               	skipz
   564  07C8  2FCB               	goto	u125
   565  07C9  3001               	movlw	1
   566  07CA  0230               	subwf	main@i,w
   567  07CB                     u125:
   568  07CB  1803               	skipnc
   569  07CC  2FCE               	goto	u121
   570  07CD  2FCF               	goto	u120
   571  07CE                     u121:
   572  07CE  2FAE               	goto	l810
   573  07CF                     u120:
   574  07CF                     l816:
   575  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   576  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   577  07D1  082F               	movf	main@temp,w
   578  07D2  00FF               	movwf	btemp+1
   579  07D3  087F               	movf	btemp+1,w
   580  07D4  00A0               	movwf	main@message
   581  07D5                     l818:
   582  07D5  3020               	movlw	(low (main@message| 0))& (0+255)
   583  07D6  00F4               	movwf	clcd_print@str
   584  07D7  3000               	movlw	0
   585  07D8  00F5               	movwf	clcd_print@str+1
   586  07D9  30C0               	movlw	192
   587  07DA  00FF               	movwf	btemp+1
   588  07DB  087F               	movf	btemp+1,w
   589  07DC  00F6               	movwf	clcd_print@addr
   590  07DD  120A  118A  26B5  120A  118A  	fcall	_clcd_print
   591  07E2                     l820:
   592  07E2  3001               	movlw	1
   593  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   594  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   595  07E5  07AD               	addwf	main@wait,f
   596  07E6  1803               	skipnc
   597  07E7  0AAE               	incf	main@wait+1,f
   598  07E8  3000               	movlw	0
   599  07E9  07AE               	addwf	main@wait+1,f
   600  07EA  2F97               	goto	l802
   601  07EB  120A  118A  2800   	ljmp	start
   602  07EE                     __end_of_main:
   603                           
   604                           	psect	text1
   605  0684                     __ptext1:	
   606 ;; *************** function _init_config *****************
   607 ;; Defined at:
   608 ;;		line 14 in file "main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    3
   629 ;; This function calls:
   630 ;;		_init_clcd
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _init_config
   638  0684                     _init_config:
   639  0684                     l794:	
   640                           ;incstack = 0
   641                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   642                           
   643                           
   644                           ;main.c: 16: 
   645  0684  120A  118A  268A  120A  118A  	fcall	_init_clcd
   646  0689                     l39:
   647  0689  0008               	return
   648  068A                     __end_of_init_config:
   649                           
   650                           	psect	text2
   651  068A                     __ptext2:	
   652 ;; *************** function _init_clcd *****************
   653 ;; Defined at:
   654 ;;		line 52 in file "clcd.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    2
   675 ;; This function calls:
   676 ;;		_init_display_controller
   677 ;; This function is called by:
   678 ;;		_init_config
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _init_clcd
   684  068A                     _init_clcd:
   685  068A                     l778:	
   686                           ;incstack = 0
   687                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   688                           
   689                           
   690                           ;clcd.c: 55:     TRISD = 0x00;
   691  068A  1683               	bsf	3,5	;RP0=1, select bank1
   692  068B  1303               	bcf	3,6	;RP1=0, select bank1
   693  068C  0188               	clrf	8	;volatile
   694  068D                     l780:
   695                           
   696                           ;clcd.c: 58:     TRISE2 = 0;
   697  068D  1109               	bcf	9,2	;volatile
   698  068E                     l782:
   699                           
   700                           ;clcd.c: 59:     TRISE1 = 0;
   701  068E  1089               	bcf	9,1	;volatile
   702  068F                     l784:
   703                           
   704                           ;clcd.c: 61:     init_display_controller();
   705  068F  120A  118A  271A  120A  118A  	fcall	_init_display_controller
   706  0694                     l23:
   707  0694  0008               	return
   708  0695                     __end_of_init_clcd:
   709                           
   710                           	psect	text3
   711  071A                     __ptext3:	
   712 ;; *************** function _init_display_controller *****************
   713 ;; Defined at:
   714 ;;		line 29 in file "clcd.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0, pclath, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0
   730 ;;      Temps:          2       0       0       0       0
   731 ;;      Totals:         2       0       0       0       0
   732 ;;Total ram usage:        2 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    1
   735 ;; This function calls:
   736 ;;		_clcd_write
   737 ;; This function is called by:
   738 ;;		_init_clcd
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _init_display_controller
   744  071A                     _init_display_controller:
   745  071A                     l754:	
   746                           ;incstack = 0
   747                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   748                           
   749                           
   750                           ;clcd.c: 32:     _delay((unsigned long)((30)*(20000000/4000.0)));
   751  071A  30C3               	movlw	195
   752  071B  00F5               	movwf	??_init_display_controller+1
   753  071C  30CD               	movlw	205
   754  071D  00F4               	movwf	??_init_display_controller
   755  071E                     u137:
   756  071E  0BF4               	decfsz	??_init_display_controller,f
   757  071F  2F1E               	goto	u137
   758  0720  0BF5               	decfsz	??_init_display_controller+1,f
   759  0721  2F1E               	goto	u137
   760  0722                     l756:
   761                           
   762                           ;clcd.c: 35:     clcd_write(0x33, 0);
   763  0722  01F0               	clrf	clcd_write@mode
   764  0723  3033               	movlw	51
   765  0724  120A  118A  26E4  120A  118A  	fcall	_clcd_write
   766  0729                     l758:
   767                           
   768                           ;clcd.c: 36:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   769  0729  301B               	movlw	27
   770  072A  00F5               	movwf	??_init_display_controller+1
   771  072B  309E               	movlw	158
   772  072C  00F4               	movwf	??_init_display_controller
   773  072D                     u147:
   774  072D  0BF4               	decfsz	??_init_display_controller,f
   775  072E  2F2D               	goto	u147
   776  072F  0BF5               	decfsz	??_init_display_controller+1,f
   777  0730  2F2D               	goto	u147
   778  0731  0000               	nop
   779                           
   780                           ;clcd.c: 37:     clcd_write(0x33, 0);
   781  0732  01F0               	clrf	clcd_write@mode
   782  0733  3033               	movlw	51
   783  0734  120A  118A  26E4  120A  118A  	fcall	_clcd_write
   784  0739                     l760:
   785                           
   786                           ;clcd.c: 38:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   787  0739  30A6               	movlw	166
   788  073A  00F4               	movwf	??_init_display_controller
   789  073B                     u157:
   790  073B  0BF4               	decfsz	??_init_display_controller,f
   791  073C  2F3B               	goto	u157
   792  073D  0000               	nop
   793  073E                     l762:
   794                           
   795                           ;clcd.c: 39:     clcd_write(0x33, 0);
   796  073E  01F0               	clrf	clcd_write@mode
   797  073F  3033               	movlw	51
   798  0740  120A  118A  26E4  120A  118A  	fcall	_clcd_write
   799  0745                     l764:
   800                           
   801                           ;clcd.c: 40:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   802  0745  2F46               	nop2	;2 cycle nop
   803  0746  2F47               	nop2	;2 cycle nop
   804  0747  0000               	nop
   805  0748                     l766:
   806                           
   807                           ;clcd.c: 42:     clcd_write(0x02, 0);
   808  0748  01F0               	clrf	clcd_write@mode
   809  0749  3002               	movlw	2
   810  074A  120A  118A  26E4  120A  118A  	fcall	_clcd_write
   811  074F                     l768:
   812                           
   813                           ;clcd.c: 43:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   814  074F  30A6               	movlw	166
   815  0750  00F4               	movwf	??_init_display_controller
   816  0751                     u167:
   817  0751  0BF4               	decfsz	??_init_display_controller,f
   818  0752  2F51               	goto	u167
   819  0753  0000               	nop
   820                           
   821                           ;clcd.c: 44:     clcd_write(0x28, 0);
   822  0754  01F0               	clrf	clcd_write@mode
   823  0755  3028               	movlw	40
   824  0756  120A  118A  26E4  120A  118A  	fcall	_clcd_write
   825  075B                     l770:
   826                           
   827                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   828  075B  30A6               	movlw	166
   829  075C  00F4               	movwf	??_init_display_controller
   830  075D                     u177:
   831  075D  0BF4               	decfsz	??_init_display_controller,f
   832  075E  2F5D               	goto	u177
   833  075F  0000               	nop
   834  0760                     l772:
   835                           
   836                           ;clcd.c: 46:     clcd_write(0x01, 0);
   837  0760  01F0               	clrf	clcd_write@mode
   838  0761  3001               	movlw	1
   839  0762  120A  118A  26E4  120A  118A  	fcall	_clcd_write
   840                           
   841                           ;clcd.c: 47:     _delay((unsigned long)((500)*(20000000/4000000.0)));
   842  0767  3004               	movlw	4
   843  0768  00F5               	movwf	??_init_display_controller+1
   844  0769  303D               	movlw	61
   845  076A  00F4               	movwf	??_init_display_controller
   846  076B                     u187:
   847  076B  0BF4               	decfsz	??_init_display_controller,f
   848  076C  2F6B               	goto	u187
   849  076D  0BF5               	decfsz	??_init_display_controller+1,f
   850  076E  2F6B               	goto	u187
   851  076F  2F70               	nop2
   852  0770                     l774:
   853                           
   854                           ;clcd.c: 48:     clcd_write(0x0C, 0);
   855  0770  01F0               	clrf	clcd_write@mode
   856  0771  300C               	movlw	12
   857  0772  120A  118A  26E4  120A  118A  	fcall	_clcd_write
   858  0777                     l776:
   859                           
   860                           ;clcd.c: 49:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   861  0777  30A6               	movlw	166
   862  0778  00F4               	movwf	??_init_display_controller
   863  0779                     u197:
   864  0779  0BF4               	decfsz	??_init_display_controller,f
   865  077A  2F79               	goto	u197
   866  077B  0000               	nop
   867  077C                     l20:
   868  077C  0008               	return
   869  077D                     __end_of_init_display_controller:
   870                           
   871                           	psect	text4
   872  06B5                     __ptext4:	
   873 ;; *************** function _clcd_print *****************
   874 ;; Defined at:
   875 ;;		line 70 in file "clcd.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  str             2    4[COMMON] PTR const unsigned char 
   878 ;;		 -> STR_1(16), main@message(13), 
   879 ;;  addr            1    6[COMMON] unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         3       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0
   894 ;;      Totals:         3       0       0       0       0
   895 ;;Total ram usage:        3 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    1
   898 ;; This function calls:
   899 ;;		_clcd_write
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function _clcd_print
   907  06B5                     _clcd_print:
   908  06B5                     l786:	
   909                           ;incstack = 0
   910                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   911                           
   912                           
   913                           ;clcd.c: 70: void clcd_print(const char *str, unsigned char addr);clcd.c: 71: {;clcd.c: 
      +                          72:     clcd_write(addr, 0);
   914  06B5  01F0               	clrf	clcd_write@mode
   915  06B6  0876               	movf	clcd_print@addr,w
   916  06B7  120A  118A  26E4  120A  118A  	fcall	_clcd_write
   917                           
   918                           ;clcd.c: 74:     while (*str != '\0')
   919  06BC  2ED3               	goto	l792
   920  06BD                     l788:
   921                           
   922                           ;clcd.c: 75:     {;clcd.c: 76:         clcd_write(*str, 1);
   923  06BD  01F0               	clrf	clcd_write@mode
   924  06BE  0AF0               	incf	clcd_write@mode,f
   925  06BF  0875               	movf	clcd_print@str+1,w
   926  06C0  00FF               	movwf	btemp+1
   927  06C1  0874               	movf	clcd_print@str,w
   928  06C2  0084               	movwf	4
   929  06C3  120A  118A  2003  120A  118A  	fcall	stringtab
   930  06C8  120A  118A  26E4  120A  118A  	fcall	_clcd_write
   931  06CD                     l790:
   932                           
   933                           ;clcd.c: 77:         str++;
   934  06CD  3001               	movlw	1
   935  06CE  07F4               	addwf	clcd_print@str,f
   936  06CF  1803               	skipnc
   937  06D0  0AF5               	incf	clcd_print@str+1,f
   938  06D1  3000               	movlw	0
   939  06D2  07F5               	addwf	clcd_print@str+1,f
   940  06D3                     l792:
   941                           
   942                           ;clcd.c: 74:     while (*str != '\0')
   943  06D3  0875               	movf	clcd_print@str+1,w
   944  06D4  1283               	bcf	3,5	;RP0=0, select bank0
   945  06D5  1303               	bcf	3,6	;RP1=0, select bank0
   946  06D6  00FF               	movwf	btemp+1
   947  06D7  0874               	movf	clcd_print@str,w
   948  06D8  0084               	movwf	4
   949  06D9  120A  118A  2003  120A  118A  	fcall	stringtab
   950  06DE  3A00               	xorlw	0
   951  06DF  1D03               	skipz
   952  06E0  2EE2               	goto	u101
   953  06E1  2EE3               	goto	u100
   954  06E2                     u101:
   955  06E2  2EBD               	goto	l788
   956  06E3                     u100:
   957  06E3                     l32:
   958  06E3  0008               	return
   959  06E4                     __end_of_clcd_print:
   960                           
   961                           	psect	text5
   962  06E4                     __ptext5:	
   963 ;; *************** function _clcd_write *****************
   964 ;; Defined at:
   965 ;;		line 12 in file "clcd.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  byte            1    wreg     unsigned char 
   968 ;;  mode            1    0[COMMON] unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  byte            1    3[COMMON] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         1       0       0       0       0
   981 ;;      Locals:         1       0       0       0       0
   982 ;;      Temps:          2       0       0       0       0
   983 ;;      Totals:         4       0       0       0       0
   984 ;;Total ram usage:        4 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_init_display_controller
   990 ;;		_clcd_print
   991 ;;		_clcd_putch
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           
   996                           ;psect for function _clcd_write
   997  06E4                     _clcd_write:
   998                           
   999                           ;incstack = 0
  1000                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1001                           ;clcd_write@byte stored from wreg
  1002  06E4  00F3               	movwf	clcd_write@byte
  1003  06E5                     l734:
  1004                           
  1005                           ;clcd.c: 12: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 13: 
      +                          {;clcd.c: 14:     RE2 = mode;
  1006  06E5  1870               	btfsc	clcd_write@mode,0
  1007  06E6  2EE8               	goto	u71
  1008  06E7  2EEC               	goto	u70
  1009  06E8                     u71:
  1010  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1011  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1012  06EA  1509               	bsf	9,2	;volatile
  1013  06EB  2EEF               	goto	u84
  1014  06EC                     u70:
  1015  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1016  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1017  06EE  1109               	bcf	9,2	;volatile
  1018  06EF                     u84:
  1019  06EF                     l736:
  1020                           
  1021                           ;clcd.c: 16:     PORTD = byte & 0xF0;
  1022  06EF  0873               	movf	clcd_write@byte,w
  1023  06F0  39F0               	andlw	240
  1024  06F1  0088               	movwf	8	;volatile
  1025  06F2                     l738:
  1026                           
  1027                           ;clcd.c: 17:     RE1 = 1;
  1028  06F2  1489               	bsf	9,1	;volatile
  1029  06F3                     l740:
  1030                           
  1031                           ;clcd.c: 18:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1032  06F3  30A6               	movlw	166
  1033  06F4  00F1               	movwf	??_clcd_write
  1034  06F5                     u207:
  1035  06F5  0BF1               	decfsz	??_clcd_write,f
  1036  06F6  2EF5               	goto	u207
  1037  06F7  0000               	nop
  1038  06F8                     l742:
  1039                           
  1040                           ;clcd.c: 19:     RE1 = 0;
  1041  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1042  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1043  06FA  1089               	bcf	9,1	;volatile
  1044  06FB                     l744:
  1045                           
  1046                           ;clcd.c: 21:     PORTD = (byte & 0x0F) << 4;
  1047  06FB  0873               	movf	clcd_write@byte,w
  1048  06FC  390F               	andlw	15
  1049  06FD  00F1               	movwf	??_clcd_write
  1050  06FE  3003               	movlw	3
  1051  06FF                     u95:
  1052  06FF  1003               	clrc
  1053  0700  0DF1               	rlf	??_clcd_write,f
  1054  0701  3EFF               	addlw	-1
  1055  0702  1D03               	skipz
  1056  0703  2EFF               	goto	u95
  1057  0704  1003               	clrc
  1058  0705  0D71               	rlf	??_clcd_write,w
  1059  0706  0088               	movwf	8	;volatile
  1060  0707                     l746:
  1061                           
  1062                           ;clcd.c: 22:     RE1 = 1;
  1063  0707  1489               	bsf	9,1	;volatile
  1064  0708                     l748:
  1065                           
  1066                           ;clcd.c: 23:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1067  0708  30A6               	movlw	166
  1068  0709  00F1               	movwf	??_clcd_write
  1069  070A                     u217:
  1070  070A  0BF1               	decfsz	??_clcd_write,f
  1071  070B  2F0A               	goto	u217
  1072  070C  0000               	nop
  1073  070D                     l750:
  1074                           
  1075                           ;clcd.c: 24:     RE1 = 0;
  1076  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1077  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1078  070F  1089               	bcf	9,1	;volatile
  1079  0710                     l752:
  1080                           
  1081                           ;clcd.c: 26:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1082  0710  301B               	movlw	27
  1083  0711  00F2               	movwf	??_clcd_write+1
  1084  0712  309E               	movlw	158
  1085  0713  00F1               	movwf	??_clcd_write
  1086  0714                     u227:
  1087  0714  0BF1               	decfsz	??_clcd_write,f
  1088  0715  2F14               	goto	u227
  1089  0716  0BF2               	decfsz	??_clcd_write+1,f
  1090  0717  2F14               	goto	u227
  1091  0718  0000               	nop
  1092  0719                     l17:
  1093  0719  0008               	return
  1094  071A                     __end_of_clcd_write:
  1095  007E                     btemp	set	126	;btemp
  1096  007E                     wtemp0	set	126
  1097                           
  1098                           	psect	config
  1099                           
  1100                           ;Config register CONFIG @ 0x2007
  1101                           ;	Oscillator Selection bits
  1102                           ;	FOSC = 0x3, unprogrammed default
  1103                           ;	Watchdog Timer Enable bit
  1104                           ;	WDTE = OFF, WDT disabled
  1105                           ;	Power-up Timer Enable bit
  1106                           ;	PWRTE = 0x1, unprogrammed default
  1107                           ;	Brown-out Reset Enable bit
  1108                           ;	BOREN = 0x1, unprogrammed default
  1109                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1110                           ;	LVP = 0x1, unprogrammed default
  1111                           ;	Data EEPROM Memory Code Protection bit
  1112                           ;	CPD = 0x1, unprogrammed default
  1113                           ;	Flash Program Memory Write Enable bits
  1114                           ;	WRT = 0x3, unprogrammed default
  1115                           ;	In-Circuit Debugger Mode bit
  1116                           ;	DEBUG = 0x1, unprogrammed default
  1117                           ;	Flash Program Memory Code Protection bit
  1118                           ;	CP = 0x1, unprogrammed default
  1119  2007                     	org	8199
  1120  2007  3FFB               	dw	16379

Data Sizes:
    Strings     16
    Constant    0
    Data        13
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     18      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), main@message(BANK0[13]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    2386
                                              7 COMMON     4     4      0
                                              0 BANK0     18    18      0
                         _clcd_print
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     902
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    1273
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      1F       5       38.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed May 31 19:35:15 2023

                               pc 0002                    clcd_print@addr 0076  __size_of_init_display_controller 0063  
                              l20 077C                                l23 0694                                l32 06E3  
                              l17 0719                                l39 0689                                u70 06EC  
                              u71 06E8                                u84 06EF                                u95 06FF  
                              fsr 0004                               l800 0782                               l810 07AE  
                             l802 0797                               l740 06F3                               l820 07E2  
                             l812 07BC                               l804 07AA                               l750 070D  
                             l742 06F8                               l734 06E5                               l814 07C2  
                             l752 0710                               l744 06FB                               l736 06EF  
                             l760 0739                               l816 07CF                               l746 0707  
                             l738 06F2                               l770 075B                               l762 073E  
                             l754 071A                               l818 07D5                               l748 0708  
                             l772 0760                               l764 0745                               l756 0722  
                             l780 068D                               l790 06CD                               l774 0770  
                             l766 0748                               l758 0729                               l782 068E  
                             l792 06D3                               l776 0777                               l768 074F  
                             l784 068F                               l786 06B5                               l778 068A  
                             l794 0684                               l788 06BD                               l798 077D  
                             _RE1 0049                               u100 06E3                               _RE2 004A  
                             u101 06E2                               u110 078A                               u120 07CF  
                             u121 07CE                               u125 07CB                               u207 06F5  
                             u217 070A                               u137 071E                               u227 0714  
                             u147 072D                               u157 073B                               u167 0751  
                             u177 075D                               u187 076B                               u197 0779  
                             fsr0 0004                               indf 0000                              STR_1 0013  
                     main@message 0020                              _main 077D                              btemp 007E  
                            start 0000                    clcd_write@byte 0073                    clcd_write@mode 0070  
                           ?_main 0070                      ?_init_config 0070                             _PORTD 0008  
                           _TRISD 0088                             main@i 0030                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 07EE  
                    __end_of_main 07EE                            ??_main 0077                            _TRISE1 0449  
                          _TRISE2 044A           _init_display_controller 071A           __end_of__initialization 07FC  
                  __pcstackCOMMON 0070                      __pidataBANK0 0695              __size_of_init_config 0006  
              __size_of_init_clcd 000B         ??_init_display_controller 0074                        _clcd_print 06B5  
                      _clcd_write 06E4                        __pmaintext 077D                        __stringtab 0003  
                         __ptext1 0684                           __ptext2 068A                           __ptext3 071A  
                         __ptext4 06B5                           __ptext5 06E4   __end_of_init_display_controller 077D  
               __end_of_init_clcd 0695              end_of_initialization 07FC                       ?_clcd_print 0074  
                     ?_clcd_write 0070                     clcd_print@str 0074               start_initialization 07EE  
             __size_of_clcd_print 002F               __size_of_clcd_write 0036                        init_fetch0 06A2  
                     __pdataBANK0 0032                     ??_init_config 0076                         ___latbits 0002  
                   __pcstackBANK0 0020                         __pstrings 0003                         _init_clcd 068A  
             __end_of_init_config 068A          ?_init_display_controller 0070                      ??_clcd_print 0077  
                    ??_clcd_write 0071                       __stringbase 0012                __end_of_clcd_print 06E4  
              __end_of_clcd_write 071A                        ?_init_clcd 0070                __end_of__stringtab 0013  
                     _init_config 0684                     __size_of_main 0071                          main@F861 0032  
                        main@temp 002F                          main@wait 002D                          init_ram0 06A6  
                     ??_init_clcd 0076                         stringcode 000D                          stringdir 000D  
                        stringtab 0003  
