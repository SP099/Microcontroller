

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 11 22:23:52 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0094                     	;# 
   173     0098                     	;# 
   174     0099                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     009F                     	;# 
   179     010C                     	;# 
   180     010D                     	;# 
   181     010E                     	;# 
   182     010F                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     0000                     	;# 
   186     0001                     	;# 
   187     0002                     	;# 
   188     0003                     	;# 
   189     0004                     	;# 
   190     0005                     	;# 
   191     0006                     	;# 
   192     0007                     	;# 
   193     0008                     	;# 
   194     0009                     	;# 
   195     000A                     	;# 
   196     000B                     	;# 
   197     000C                     	;# 
   198     000D                     	;# 
   199     000E                     	;# 
   200     000E                     	;# 
   201     000F                     	;# 
   202     0010                     	;# 
   203     0011                     	;# 
   204     0012                     	;# 
   205     0013                     	;# 
   206     0014                     	;# 
   207     0015                     	;# 
   208     0015                     	;# 
   209     0016                     	;# 
   210     0017                     	;# 
   211     0018                     	;# 
   212     0019                     	;# 
   213     001A                     	;# 
   214     001B                     	;# 
   215     001B                     	;# 
   216     001C                     	;# 
   217     001D                     	;# 
   218     001E                     	;# 
   219     001F                     	;# 
   220     0081                     	;# 
   221     0085                     	;# 
   222     0086                     	;# 
   223     0087                     	;# 
   224     0088                     	;# 
   225     0089                     	;# 
   226     008C                     	;# 
   227     008D                     	;# 
   228     008E                     	;# 
   229     0091                     	;# 
   230     0092                     	;# 
   231     0093                     	;# 
   232     0094                     	;# 
   233     0098                     	;# 
   234     0099                     	;# 
   235     009C                     	;# 
   236     009D                     	;# 
   237     009E                     	;# 
   238     009F                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     0091                     	;# 
   290     0092                     	;# 
   291     0093                     	;# 
   292     0094                     	;# 
   293     0098                     	;# 
   294     0099                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0094                     	;# 
   353     0098                     	;# 
   354     0099                     	;# 
   355     009C                     	;# 
   356     009D                     	;# 
   357     009E                     	;# 
   358     009F                     	;# 
   359     010C                     	;# 
   360     010D                     	;# 
   361     010E                     	;# 
   362     010F                     	;# 
   363     018C                     	;# 
   364     018D                     	;# 
   365     0000                     	;# 
   366     0001                     	;# 
   367     0002                     	;# 
   368     0003                     	;# 
   369     0004                     	;# 
   370     0005                     	;# 
   371     0006                     	;# 
   372     0007                     	;# 
   373     0008                     	;# 
   374     0009                     	;# 
   375     000A                     	;# 
   376     000B                     	;# 
   377     000C                     	;# 
   378     000D                     	;# 
   379     000E                     	;# 
   380     000E                     	;# 
   381     000F                     	;# 
   382     0010                     	;# 
   383     0011                     	;# 
   384     0012                     	;# 
   385     0013                     	;# 
   386     0014                     	;# 
   387     0015                     	;# 
   388     0015                     	;# 
   389     0016                     	;# 
   390     0017                     	;# 
   391     0018                     	;# 
   392     0019                     	;# 
   393     001A                     	;# 
   394     001B                     	;# 
   395     001B                     	;# 
   396     001C                     	;# 
   397     001D                     	;# 
   398     001E                     	;# 
   399     001F                     	;# 
   400     0081                     	;# 
   401     0085                     	;# 
   402     0086                     	;# 
   403     0087                     	;# 
   404     0088                     	;# 
   405     0089                     	;# 
   406     008C                     	;# 
   407     008D                     	;# 
   408     008E                     	;# 
   409     0091                     	;# 
   410     0092                     	;# 
   411     0093                     	;# 
   412     0094                     	;# 
   413     0098                     	;# 
   414     0099                     	;# 
   415     009C                     	;# 
   416     009D                     	;# 
   417     009E                     	;# 
   418     009F                     	;# 
   419     010C                     	;# 
   420     010D                     	;# 
   421     010E                     	;# 
   422     010F                     	;# 
   423     018C                     	;# 
   424     018D                     	;# 
   425                           
   426                           	psect	idataBANK0
   427     06B0                     __pidataBANK0:
   428                           
   429                           ;initializer for main@flag2
   430     06B0  3401               	retlw	1
   431     06B1  3400               	retlw	0
   432                           
   433                           ;initializer for read_matrix_keypad@once
   434     06B2  3401               	retlw	1
   435     0001                     _TMR0	set	1
   436     0008                     _PORTD	set	8
   437     005A                     _TMR0IF	set	90
   438     0032                     _RB2	set	50
   439     0031                     _RB1	set	49
   440     0030                     _RB0	set	48
   441     0040                     _RD0	set	64
   442     0041                     _RD1	set	65
   443     0042                     _RD2	set	66
   444     0043                     _RD3	set	67
   445     005F                     _GIE	set	95
   446     0049                     _RE1	set	73
   447     004A                     _RE2	set	74
   448     0086                     _TRISB	set	134
   449     0088                     _TRISD	set	136
   450     040B                     _PSA	set	1035
   451     040D                     _T0CS	set	1037
   452     040F                     _nRBPU	set	1039
   453     0449                     _TRISE1	set	1097
   454     044A                     _TRISE2	set	1098
   455                           
   456                           	psect	strings
   457     0500                     __pstrings:
   458     0500                     stringtab:
   459     0500                     __stringtab:
   460     0500                     stringcode:	
   461                           ;	String table - string pointers are 1 byte each
   462                           
   463     0500                     stringdir:
   464     0500  3005               	movlw	high stringdir
   465     0501  008A               	movwf	10
   466     0502  0804               	movf	4,w
   467     0503  0A84               	incf	4,f
   468     0504  0782               	addwf	2,f
   469     0505                     __stringbase:
   470     0505  3400               	retlw	0
   471     0506                     __end_of__stringtab:
   472     0506                     STR_2:
   473     0506  3453               	retlw	83	;'S'
   474     0507  3463               	retlw	99	;'c'
   475     0508  3472               	retlw	114	;'r'
   476     0509  346F               	retlw	111	;'o'
   477     050A  346C               	retlw	108	;'l'
   478     050B  346C               	retlw	108	;'l'
   479     050C  3469               	retlw	105	;'i'
   480     050D  346E               	retlw	110	;'n'
   481     050E  3467               	retlw	103	;'g'
   482     050F  3420               	retlw	32	;' '
   483     0510  344D               	retlw	77	;'M'
   484     0511  3461               	retlw	97	;'a'
   485     0512  3472               	retlw	114	;'r'
   486     0513  3471               	retlw	113	;'q'
   487     0514  3475               	retlw	117	;'u'
   488     0515  3465               	retlw	101	;'e'
   489     0516  3400               	retlw	0
   490     0517                     STR_4:
   491     0517  3445               	retlw	69	;'E'
   492     0518  346E               	retlw	110	;'n'
   493     0519  3474               	retlw	116	;'t'
   494     051A  3465               	retlw	101	;'e'
   495     051B  3472               	retlw	114	;'r'
   496     051C  3420               	retlw	32	;' '
   497     051D  344E               	retlw	78	;'N'
   498     051E  3465               	retlw	101	;'e'
   499     051F  3477               	retlw	119	;'w'
   500     0520  3420               	retlw	32	;' '
   501     0521  344E               	retlw	78	;'N'
   502     0522  3475               	retlw	117	;'u'
   503     0523  346D               	retlw	109	;'m'
   504     0524  3462               	retlw	98	;'b'
   505     0525  3465               	retlw	101	;'e'
   506     0526  3472               	retlw	114	;'r'
   507     0527  3400               	retlw	0
   508     0528                     STR_1:
   509     0528  3465               	retlw	101	;'e'
   510     0529  346E               	retlw	110	;'n'
   511     052A  3474               	retlw	116	;'t'
   512     052B  3465               	retlw	101	;'e'
   513     052C  3472               	retlw	114	;'r'
   514     052D  3420               	retlw	32	;' '
   515     052E  3474               	retlw	116	;'t'
   516     052F  3468               	retlw	104	;'h'
   517     0530  3465               	retlw	101	;'e'
   518     0531  3420               	retlw	32	;' '
   519     0532  346E               	retlw	110	;'n'
   520     0533  3475               	retlw	117	;'u'
   521     0534  346D               	retlw	109	;'m'
   522     0535  3462               	retlw	98	;'b'
   523     0536  3465               	retlw	101	;'e'
   524     0537  3472               	retlw	114	;'r'
   525     0538  3400               	retlw	0
   526     0539                     STR_3:
   527     0539  3452               	retlw	82	;'R'
   528     053A  3465               	retlw	101	;'e'
   529     053B  346C               	retlw	108	;'l'
   530     053C  3465               	retlw	101	;'e'
   531     053D  3461               	retlw	97	;'a'
   532     053E  3473               	retlw	115	;'s'
   533     053F  3465               	retlw	101	;'e'
   534     0540  3420               	retlw	32	;' '
   535     0541  3473               	retlw	115	;'s'
   536     0542  3474               	retlw	116	;'t'
   537     0543  346F               	retlw	111	;'o'
   538     0544  3470               	retlw	112	;'p'
   539     0545  3420               	retlw	32	;' '
   540     0546  346B               	retlw	107	;'k'
   541     0547  3465               	retlw	101	;'e'
   542     0548  3479               	retlw	121	;'y'
   543     0549  3400               	retlw	0
   544     054A                     STR_5:
   545     054A  344D               	retlw	77	;'M'
   546     054B  3473               	retlw	115	;'s'
   547     054C  3467               	retlw	103	;'g'
   548     054D  343A               	retlw	58	;':'
   549     054E  3400               	retlw	0
   550                           
   551                           	psect	cinit
   552     0011                     start_initialization:	
   553                           ; #config settings
   554                           
   555     0011                     __initialization:
   556                           
   557                           ; Initialize objects allocated to BANK0
   558     0011  120A  118A  26B0  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   559     0016  00DA               	movwf	__pdataBANK0& (0+127)
   560     0017  120A  118A  26B1  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   561     001C  00DB               	movwf	(__pdataBANK0+1)& (0+127)
   562     001D  120A  118A  26B2  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   563     0022  00DC               	movwf	(__pdataBANK0+2)& (0+127)
   564                           
   565                           ; Clear objects allocated to BANK0
   566     0023  1383               	bcf	3,7	;select IRP bank0
   567     0024  3020               	movlw	low __pbssBANK0
   568     0025  0084               	movwf	4
   569     0026  3048               	movlw	low (__pbssBANK0+40)
   570     0027  120A  118A  26A8  120A  118A  	fcall	clear_ram0
   571                           
   572                           ; Clear objects allocated to COMMON
   573     002C  01FB               	clrf	__pbssCOMMON& (0+127)
   574     002D  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   575     002E                     end_of_initialization:	
   576                           ;End of C runtime variable initialization code
   577                           
   578     002E                     __end_of__initialization:
   579     002E  0183               	clrf	3
   580     002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
   581                           
   582                           	psect	bssCOMMON
   583     007B                     __pbssCOMMON:
   584     007B                     _sigma:
   585     007B                     	ds	2
   586                           
   587                           	psect	bssBANK0
   588     0020                     __pbssBANK0:
   589     0020                     main@arr:
   590     0020                     	ds	16
   591     0030                     main@pwd:
   592     0030                     	ds	8
   593     0038                     isr@count:
   594     0038                     	ds	2
   595     003A                     main@char_pos:
   596     003A                     	ds	2
   597     003C                     main@pos:
   598     003C                     	ds	2
   599     003E                     main@temp:
   600     003E                     	ds	2
   601     0040                     main@count:
   602     0040                     	ds	2
   603     0042                     main@count_letter:
   604     0042                     	ds	2
   605     0044                     main@flag1:
   606     0044                     	ds	2
   607     0046                     main@edit_key:
   608     0046                     	ds	2
   609                           
   610                           	psect	dataBANK0
   611     005A                     __pdataBANK0:
   612     005A                     main@flag2:
   613     005A                     	ds	2
   614     005C                     read_matrix_keypad@once:
   615     005C                     	ds	1
   616                           
   617                           	psect	clrtext
   618     06A8                     clear_ram0:	
   619                           ;	Called with FSR containing the base address, and
   620                           ;	W with the last address+1
   621                           
   622     06A8  0064               	clrwdt	;clear the watchdog before getting into this loop
   623     06A9                     clrloop0:
   624     06A9  0180               	clrf	0	;clear RAM location pointed to by FSR
   625     06AA  0A84               	incf	4,f	;increment pointer
   626     06AB  0604               	xorwf	4,w	;XOR with final address
   627     06AC  1903               	btfsc	3,2	;have we reached the end yet?
   628     06AD  3400               	retlw	0	;all done for this memory range, return
   629     06AE  0604               	xorwf	4,w	;XOR again to restore value
   630     06AF  2EA9               	goto	clrloop0	;do the next byte
   631                           
   632                           	psect	cstackCOMMON
   633     0070                     __pcstackCOMMON:
   634     0070                     ?_init_clcd:
   635     0070                     ?_init_matrix_keypad:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ?_init_timer0:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ?_read_matrix_keypad:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_init_config:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?_main:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?_init_display_controller:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ?_scan_keypad:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0070                     ?_isr:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ?___awdiv:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ___awdiv@divisor:	
   663                           ; 2 bytes @ 0x0
   664                           
   665                           
   666                           ; 2 bytes @ 0x0
   667     0070                     	ds	2
   668     0072                     ___awdiv@dividend:
   669                           
   670                           ; 2 bytes @ 0x2
   671     0072                     	ds	2
   672     0074                     ??___awdiv:
   673     0074                     ___awdiv@counter:	
   674                           ; 1 bytes @ 0x4
   675                           
   676                           
   677                           ; 1 bytes @ 0x4
   678     0074                     	ds	1
   679     0075                     ___awdiv@sign:
   680                           
   681                           ; 1 bytes @ 0x5
   682     0075                     	ds	1
   683     0076                     ___awdiv@quotient:
   684                           
   685                           ; 2 bytes @ 0x6
   686     0076                     	ds	2
   687     0078                     ??_isr:
   688                           
   689                           ; 1 bytes @ 0x8
   690     0078                     	ds	3
   691                           
   692                           	psect	cstackBANK0
   693     0048                     __pcstackBANK0:
   694     0048                     ??_init_matrix_keypad:
   695     0048                     ??_init_timer0:	
   696                           ; 1 bytes @ 0x0
   697                           
   698     0048                     ?_clcd_write:	
   699                           ; 1 bytes @ 0x0
   700                           
   701     0048                     ?_clcd_write@clcd$F100:	
   702                           ; 1 bytes @ 0x0
   703                           
   704     0048                     ??_scan_keypad:	
   705                           ; 1 bytes @ 0x0
   706                           
   707     0048                     clcd_write@mode:	
   708                           ; 1 bytes @ 0x0
   709                           
   710     0048                     clcd_write@clcd$F100@mode:	
   711                           ; 1 bytes @ 0x0
   712                           
   713     0048                     scan_keypad@i:	
   714                           ; 1 bytes @ 0x0
   715                           
   716                           
   717                           ; 2 bytes @ 0x0
   718     0048                     	ds	1
   719     0049                     ??_clcd_write:
   720     0049                     ??_clcd_write@clcd$F100:	
   721                           ; 1 bytes @ 0x1
   722                           
   723                           
   724                           ; 1 bytes @ 0x1
   725     0049                     	ds	1
   726     004A                     ??_read_matrix_keypad:
   727     004A                     read_matrix_keypad@mode:	
   728                           ; 1 bytes @ 0x2
   729                           
   730                           
   731                           ; 1 bytes @ 0x2
   732     004A                     	ds	1
   733     004B                     clcd_write@byte:
   734     004B                     clcd_write@clcd$F100@byte:	
   735                           ; 1 bytes @ 0x3
   736                           
   737     004B                     read_matrix_keypad@key:	
   738                           ; 1 bytes @ 0x3
   739                           
   740                           
   741                           ; 1 bytes @ 0x3
   742     004B                     	ds	1
   743     004C                     ?_clcd_print:
   744     004C                     ?_clcd_putch:	
   745                           ; 1 bytes @ 0x4
   746                           
   747     004C                     ??_init_display_controller:	
   748                           ; 1 bytes @ 0x4
   749                           
   750     004C                     clcd_putch@addr:	
   751                           ; 1 bytes @ 0x4
   752                           
   753     004C                     clcd_print@addr:	
   754                           ; 1 bytes @ 0x4
   755                           
   756                           
   757                           ; 1 bytes @ 0x4
   758     004C                     	ds	1
   759     004D                     ??_clcd_print:
   760     004D                     ??_clcd_putch:	
   761                           ; 1 bytes @ 0x5
   762                           
   763     004D                     clcd_putch@data:	
   764                           ; 1 bytes @ 0x5
   765                           
   766     004D                     clcd_print@str:	
   767                           ; 1 bytes @ 0x5
   768                           
   769                           
   770                           ; 1 bytes @ 0x5
   771     004D                     	ds	1
   772     004E                     ??_init_clcd:
   773     004E                     ??_init_config:	
   774                           ; 1 bytes @ 0x6
   775                           
   776     004E                     ??_main:	
   777                           ; 1 bytes @ 0x6
   778                           
   779                           
   780                           ; 1 bytes @ 0x6
   781     004E                     	ds	2
   782     0050                     main@i:
   783                           
   784                           ; 4 bytes @ 0x8
   785     0050                     	ds	4
   786     0054                     main@i_87:
   787                           
   788                           ; 4 bytes @ 0xC
   789     0054                     	ds	4
   790     0058                     main@cur_key:
   791                           
   792                           ; 1 bytes @ 0x10
   793     0058                     	ds	1
   794     0059                     main@key:
   795                           
   796                           ; 1 bytes @ 0x11
   797     0059                     	ds	1
   798                           
   799                           	psect	maintext
   800     0032                     __pmaintext:	
   801 ;;
   802 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   803 ;;
   804 ;; *************** function _main *****************
   805 ;; Defined at:
   806 ;;		line 45 in file "main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  i               4   12[BANK0 ] unsigned long 
   811 ;;  i               4    8[BANK0 ] unsigned long 
   812 ;;  key             1   17[BANK0 ] unsigned char 
   813 ;;  cur_key         1   16[BANK0 ] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : B00/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0      10       0       0       0
   825 ;;      Temps:          0       2       0       0       0
   826 ;;      Totals:         0      12       0       0       0
   827 ;;Total ram usage:       12 bytes
   828 ;; Hardware stack levels required when called: 6
   829 ;; This function calls:
   830 ;;		_clcd_print
   831 ;;		_clcd_putch
   832 ;;		_clcd_write
   833 ;;		_init_config
   834 ;;		_read_matrix_keypad
   835 ;; This function is called by:
   836 ;;		Startup code after reset
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840     0032                     _main:	
   841                           ;psect for function _main
   842                           
   843     0032                     l1532:	
   844                           ;incstack = 0
   845                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   846                           
   847                           
   848                           ;main.c: 46:         if(cur_key == 1 && flag1 == 1);main.c: 47:         {;main.c: 48: ;m
      +                          ain.c: 49:             clcd_write(0x01,0);;main.c: 52:             {
   849     0032  120A  118A  2654  120A  118A  	fcall	_init_config
   850     0037                     l1534:
   851                           
   852                           ;main.c: 56:                 if(char_pos > 15)
   853     0037  3001               	movlw	1
   854     0038  120A  118A  262D  120A  118A  	fcall	_read_matrix_keypad
   855     003D  1283               	bcf	3,5	;RP0=0, select bank0
   856     003E  1303               	bcf	3,6	;RP1=0, select bank0
   857     003F  00D9               	movwf	main@key
   858     0040                     l1536:
   859                           
   860                           ;main.c: 58:                 clcd_putch(arr[count],(0xC0 + char_pos));
   861     0040  0A59               	incf	main@key,w
   862     0041  1903               	btfsc	3,2
   863     0042  2844               	goto	u1141
   864     0043  2845               	goto	u1140
   865     0044                     u1141:
   866     0044  2847               	goto	l1540
   867     0045                     u1140:
   868     0045                     l1538:
   869                           
   870                           ;main.c: 59:             };main.c: 60:             pos--;
   871     0045  0859               	movf	main@key,w
   872     0046  00D8               	movwf	main@cur_key
   873     0047                     l1540:
   874                           
   875                           ;main.c: 62:                 pos = 15;
   876     0047  0358               	decf	main@cur_key,w
   877     0048  1D03               	btfss	3,2
   878     0049  284B               	goto	u1151
   879     004A  284C               	goto	u1150
   880     004B                     u1151:
   881     004B  28E6               	goto	l1578
   882     004C                     u1150:
   883     004C                     l1542:
   884     004C  0344               	decf	main@flag1,w
   885     004D  0445               	iorwf	main@flag1+1,w
   886     004E  1D03               	btfss	3,2
   887     004F  2851               	goto	u1161
   888     0050  2852               	goto	u1160
   889     0051                     u1161:
   890     0051  28E6               	goto	l1578
   891     0052                     u1160:
   892     0052                     l1544:
   893                           
   894                           ;main.c: 63: ;main.c: 65:         }
   895     0052  01C8               	clrf	clcd_write@mode
   896     0053  3001               	movlw	1
   897     0054  120A  118A  254F  120A  118A  	fcall	_clcd_write
   898     0059                     l1546:
   899                           
   900                           ;main.c: 67:         {
   901     0059  1283               	bcf	3,5	;RP0=0, select bank0
   902     005A  1303               	bcf	3,6	;RP1=0, select bank0
   903     005B  01C0               	clrf	main@count
   904     005C  01C1               	clrf	main@count+1
   905     005D  289E               	goto	l1562
   906     005E                     l1548:
   907                           
   908                           ;main.c: 68:             clcd_write(0x01,0);;main.c: 69: 
   909     005E  1283               	bcf	3,5	;RP0=0, select bank0
   910     005F  1303               	bcf	3,6	;RP1=0, select bank0
   911     0060  0840               	movf	main@count,w
   912     0061  073C               	addwf	main@pos,w
   913     0062  00BA               	movwf	main@char_pos
   914     0063  0841               	movf	main@count+1,w
   915     0064  1803               	skipnc
   916     0065  0A41               	incf	main@count+1,w
   917     0066  073D               	addwf	main@pos+1,w
   918     0067  00BB               	movwf	main@char_pos+1
   919     0068                     l1550:
   920                           
   921                           ;main.c: 70:             for(count = 0; count <= count_letter; count++)
   922     0068  1FBB               	btfss	main@char_pos+1,7
   923     0069  286B               	goto	u1171
   924     006A  286C               	goto	u1170
   925     006B                     u1171:
   926     006B  2870               	goto	l1554
   927     006C                     u1170:
   928     006C                     l1552:
   929                           
   930                           ;main.c: 71:             {
   931     006C  300F               	movlw	15
   932     006D  00BA               	movwf	main@char_pos
   933     006E  3000               	movlw	0
   934     006F  00BB               	movwf	main@char_pos+1
   935     0070                     l1554:
   936                           
   937                           ;main.c: 72:                 char_pos = pos + count;
   938     0070  083B               	movf	main@char_pos+1,w
   939     0071  3A80               	xorlw	128
   940     0072  00FF               	movwf	btemp+1
   941     0073  3080               	movlw	128
   942     0074  027F               	subwf	btemp+1,w
   943     0075  1D03               	skipz
   944     0076  2879               	goto	u1185
   945     0077  3010               	movlw	16
   946     0078  023A               	subwf	main@char_pos,w
   947     0079                     u1185:
   948     0079  1C03               	skipc
   949     007A  287C               	goto	u1181
   950     007B  287D               	goto	u1180
   951     007C                     u1181:
   952     007C  2887               	goto	l1558
   953     007D                     u1180:
   954     007D                     l1556:
   955                           
   956                           ;main.c: 73:                 if(char_pos < 0)
   957     007D  1283               	bcf	3,5	;RP0=0, select bank0
   958     007E  1303               	bcf	3,6	;RP1=0, select bank0
   959     007F  083A               	movf	main@char_pos,w
   960     0080  3EF1               	addlw	241
   961     0081  00BA               	movwf	main@char_pos
   962     0082  083B               	movf	main@char_pos+1,w
   963     0083  1803               	skipnc
   964     0084  3E01               	addlw	1
   965     0085  3EFF               	addlw	255
   966     0086  00BB               	movwf	main@char_pos+1
   967     0087                     l1558:
   968                           
   969                           ;main.c: 74:                     char_pos = 15;
   970     0087  1283               	bcf	3,5	;RP0=0, select bank0
   971     0088  1303               	bcf	3,6	;RP1=0, select bank0
   972     0089  083A               	movf	main@char_pos,w
   973     008A  3EC0               	addlw	192
   974     008B  00CC               	movwf	clcd_putch@addr
   975     008C  0840               	movf	main@count,w
   976     008D  3E20               	addlw	(low (main@arr| 0))& (0+255)
   977     008E  0084               	movwf	4
   978     008F  1383               	bcf	3,7	;select IRP bank0
   979     0090  0800               	movf	0,w
   980     0091  120A  118A  266F  120A  118A  	fcall	_clcd_putch
   981     0096                     l1560:
   982                           
   983                           ;main.c: 75:                 if(char_pos > 15)
   984     0096  3001               	movlw	1
   985     0097  1283               	bcf	3,5	;RP0=0, select bank0
   986     0098  1303               	bcf	3,6	;RP1=0, select bank0
   987     0099  07C0               	addwf	main@count,f
   988     009A  1803               	skipnc
   989     009B  0AC1               	incf	main@count+1,f
   990     009C  3000               	movlw	0
   991     009D  07C1               	addwf	main@count+1,f
   992     009E                     l1562:
   993     009E  0843               	movf	main@count_letter+1,w
   994     009F  3A80               	xorlw	128
   995     00A0  00CE               	movwf	??_main
   996     00A1  0841               	movf	main@count+1,w
   997     00A2  3A80               	xorlw	128
   998     00A3  024E               	subwf	??_main,w
   999     00A4  1D03               	skipz
  1000     00A5  28A8               	goto	u1195
  1001     00A6  0840               	movf	main@count,w
  1002     00A7  0242               	subwf	main@count_letter,w
  1003     00A8                     u1195:
  1004     00A8  1803               	skipnc
  1005     00A9  28AB               	goto	u1191
  1006     00AA  28AC               	goto	u1190
  1007     00AB                     u1191:
  1008     00AB  285E               	goto	l1548
  1009     00AC                     u1190:
  1010     00AC                     l1564:
  1011                           
  1012                           ;main.c: 76:                     char_pos = char_pos - 15;
  1013     00AC  30FF               	movlw	255
  1014     00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1015     00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1016     00AF  07BC               	addwf	main@pos,f
  1017     00B0  1803               	skipnc
  1018     00B1  0ABD               	incf	main@pos+1,f
  1019     00B2  30FF               	movlw	255
  1020     00B3  07BD               	addwf	main@pos+1,f
  1021     00B4                     l1566:
  1022                           
  1023                           ;main.c: 77:                 clcd_putch(arr[count],(0xC0 + char_pos));
  1024     00B4  1FBD               	btfss	main@pos+1,7
  1025     00B5  28B7               	goto	u1201
  1026     00B6  28B8               	goto	u1200
  1027     00B7                     u1201:
  1028     00B7  28BC               	goto	l63
  1029     00B8                     u1200:
  1030     00B8                     l1568:
  1031                           
  1032                           ;main.c: 78:             }
  1033     00B8  300F               	movlw	15
  1034     00B9  00BC               	movwf	main@pos
  1035     00BA  3000               	movlw	0
  1036     00BB  00BD               	movwf	main@pos+1
  1037     00BC                     l63:
  1038                           
  1039                           ;main.c: 80:             if(pos > 15)
  1040     00BC  3000               	movlw	0
  1041     00BD  00D3               	movwf	main@i+3
  1042     00BE  3000               	movlw	0
  1043     00BF  00D2               	movwf	main@i+2
  1044     00C0  3000               	movlw	0
  1045     00C1  00D1               	movwf	main@i+1
  1046     00C2  3000               	movlw	0
  1047     00C3  00D0               	movwf	main@i
  1048     00C4                     l1574:
  1049     00C4  3001               	movlw	1
  1050     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1051     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1052     00C7  07D0               	addwf	main@i,f
  1053     00C8  3000               	movlw	0
  1054     00C9  1803               	skipnc
  1055     00CA  3001               	movlw	1
  1056     00CB  07D1               	addwf	main@i+1,f
  1057     00CC  3000               	movlw	0
  1058     00CD  1803               	skipnc
  1059     00CE  3001               	movlw	1
  1060     00CF  07D2               	addwf	main@i+2,f
  1061     00D0  3000               	movlw	0
  1062     00D1  1803               	skipnc
  1063     00D2  3001               	movlw	1
  1064     00D3  07D3               	addwf	main@i+3,f
  1065     00D4                     l1576:
  1066     00D4  0853               	movf	main@i+3,w
  1067     00D5  1D03               	btfss	3,2
  1068     00D6  28E6               	goto	u1210
  1069     00D7  0852               	movf	main@i+2,w
  1070     00D8  1D03               	btfss	3,2
  1071     00D9  28E6               	goto	u1210
  1072     00DA  309C               	movlw	156
  1073     00DB  0251               	subwf	main@i+1,w
  1074     00DC  1D03               	skipz
  1075     00DD  28E2               	goto	u1213
  1076     00DE  3040               	movlw	64
  1077     00DF  0250               	subwf	main@i,w
  1078     00E0  1D03               	skipz
  1079     00E1  28E2               	goto	u1213
  1080     00E2                     u1213:
  1081     00E2  1C03               	btfss	3,0
  1082     00E3  28E5               	goto	u1211
  1083     00E4  28E6               	goto	u1210
  1084     00E5                     u1211:
  1085     00E5  28C4               	goto	l1574
  1086     00E6                     u1210:
  1087     00E6                     l1578:
  1088                           
  1089                           ;main.c: 82: 
  1090     00E6  3002               	movlw	2
  1091     00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1092     00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1093     00E9  0658               	xorwf	main@cur_key,w
  1094     00EA  1D03               	btfss	3,2
  1095     00EB  28ED               	goto	u1221
  1096     00EC  28EE               	goto	u1220
  1097     00ED                     u1221:
  1098     00ED  2993               	goto	l1618
  1099     00EE                     u1220:
  1100     00EE                     l1580:
  1101     00EE  0344               	decf	main@flag1,w
  1102     00EF  0445               	iorwf	main@flag1+1,w
  1103     00F0  1D03               	btfss	3,2
  1104     00F1  28F3               	goto	u1231
  1105     00F2  28F4               	goto	u1230
  1106     00F3                     u1231:
  1107     00F3  2993               	goto	l1618
  1108     00F4                     u1230:
  1109     00F4                     l1582:
  1110                           
  1111                           ;main.c: 83:             for(unsigned long int i = 0; i<40000; i++);;main.c: 84:        
      +                           }
  1112     00F4  01C8               	clrf	clcd_write@mode
  1113     00F5  3001               	movlw	1
  1114     00F6  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1115     00FB                     l1584:
  1116                           
  1117                           ;main.c: 86:         if(key == 1 && edit_key == 1)
  1118     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1119     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1120     00FD  01C0               	clrf	main@count
  1121     00FE  01C1               	clrf	main@count+1
  1122     00FF  2940               	goto	l1600
  1123     0100                     l1586:
  1124                           
  1125                           ;main.c: 87:         {;main.c: 88:             arr[count_letter] = arr[count_letter] + 1
      +                          ;
  1126     0100  1283               	bcf	3,5	;RP0=0, select bank0
  1127     0101  1303               	bcf	3,6	;RP1=0, select bank0
  1128     0102  0840               	movf	main@count,w
  1129     0103  073C               	addwf	main@pos,w
  1130     0104  00BA               	movwf	main@char_pos
  1131     0105  0841               	movf	main@count+1,w
  1132     0106  1803               	skipnc
  1133     0107  0A41               	incf	main@count+1,w
  1134     0108  073D               	addwf	main@pos+1,w
  1135     0109  00BB               	movwf	main@char_pos+1
  1136     010A                     l1588:
  1137                           
  1138                           ;main.c: 89:             if(arr[count_letter] > '9')
  1139     010A  1FBB               	btfss	main@char_pos+1,7
  1140     010B  290D               	goto	u1241
  1141     010C  290E               	goto	u1240
  1142     010D                     u1241:
  1143     010D  2912               	goto	l1592
  1144     010E                     u1240:
  1145     010E                     l1590:
  1146                           
  1147                           ;main.c: 90:             {
  1148     010E  300F               	movlw	15
  1149     010F  00BA               	movwf	main@char_pos
  1150     0110  3000               	movlw	0
  1151     0111  00BB               	movwf	main@char_pos+1
  1152     0112                     l1592:
  1153                           
  1154                           ;main.c: 91:                 arr[count_letter] = '0';
  1155     0112  083B               	movf	main@char_pos+1,w
  1156     0113  3A80               	xorlw	128
  1157     0114  00FF               	movwf	btemp+1
  1158     0115  3080               	movlw	128
  1159     0116  027F               	subwf	btemp+1,w
  1160     0117  1D03               	skipz
  1161     0118  291B               	goto	u1255
  1162     0119  3010               	movlw	16
  1163     011A  023A               	subwf	main@char_pos,w
  1164     011B                     u1255:
  1165     011B  1C03               	skipc
  1166     011C  291E               	goto	u1251
  1167     011D  291F               	goto	u1250
  1168     011E                     u1251:
  1169     011E  2929               	goto	l1596
  1170     011F                     u1250:
  1171     011F                     l1594:
  1172                           
  1173                           ;main.c: 92:             }
  1174     011F  1283               	bcf	3,5	;RP0=0, select bank0
  1175     0120  1303               	bcf	3,6	;RP1=0, select bank0
  1176     0121  083A               	movf	main@char_pos,w
  1177     0122  3EF1               	addlw	241
  1178     0123  00BA               	movwf	main@char_pos
  1179     0124  083B               	movf	main@char_pos+1,w
  1180     0125  1803               	skipnc
  1181     0126  3E01               	addlw	1
  1182     0127  3EFF               	addlw	255
  1183     0128  00BB               	movwf	main@char_pos+1
  1184     0129                     l1596:
  1185                           
  1186                           ;main.c: 93:             if(arr[count_letter] < '0')
  1187     0129  1283               	bcf	3,5	;RP0=0, select bank0
  1188     012A  1303               	bcf	3,6	;RP1=0, select bank0
  1189     012B  083A               	movf	main@char_pos,w
  1190     012C  3EC0               	addlw	192
  1191     012D  00CC               	movwf	clcd_putch@addr
  1192     012E  0840               	movf	main@count,w
  1193     012F  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1194     0130  0084               	movwf	4
  1195     0131  1383               	bcf	3,7	;select IRP bank0
  1196     0132  0800               	movf	0,w
  1197     0133  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1198     0138                     l1598:
  1199                           
  1200                           ;main.c: 94:             {
  1201     0138  3001               	movlw	1
  1202     0139  1283               	bcf	3,5	;RP0=0, select bank0
  1203     013A  1303               	bcf	3,6	;RP1=0, select bank0
  1204     013B  07C0               	addwf	main@count,f
  1205     013C  1803               	skipnc
  1206     013D  0AC1               	incf	main@count+1,f
  1207     013E  3000               	movlw	0
  1208     013F  07C1               	addwf	main@count+1,f
  1209     0140                     l1600:
  1210     0140  0843               	movf	main@count_letter+1,w
  1211     0141  3A80               	xorlw	128
  1212     0142  00CE               	movwf	??_main
  1213     0143  0841               	movf	main@count+1,w
  1214     0144  3A80               	xorlw	128
  1215     0145  024E               	subwf	??_main,w
  1216     0146  1D03               	skipz
  1217     0147  294A               	goto	u1265
  1218     0148  0840               	movf	main@count,w
  1219     0149  0242               	subwf	main@count_letter,w
  1220     014A                     u1265:
  1221     014A  1803               	skipnc
  1222     014B  294D               	goto	u1261
  1223     014C  294E               	goto	u1260
  1224     014D                     u1261:
  1225     014D  2900               	goto	l1586
  1226     014E                     u1260:
  1227     014E                     l1602:
  1228                           
  1229                           ;main.c: 95:                 arr[count_letter] = '9';
  1230     014E  3001               	movlw	1
  1231     014F  1283               	bcf	3,5	;RP0=0, select bank0
  1232     0150  1303               	bcf	3,6	;RP1=0, select bank0
  1233     0151  07BC               	addwf	main@pos,f
  1234     0152  1803               	skipnc
  1235     0153  0ABD               	incf	main@pos+1,f
  1236     0154  3000               	movlw	0
  1237     0155  07BD               	addwf	main@pos+1,f
  1238     0156                     l1604:
  1239                           
  1240                           ;main.c: 96:             }
  1241     0156  083D               	movf	main@pos+1,w
  1242     0157  3A80               	xorlw	128
  1243     0158  00FF               	movwf	btemp+1
  1244     0159  3080               	movlw	128
  1245     015A  027F               	subwf	btemp+1,w
  1246     015B  1D03               	skipz
  1247     015C  295F               	goto	u1275
  1248     015D  3010               	movlw	16
  1249     015E  023C               	subwf	main@pos,w
  1250     015F                     u1275:
  1251     015F  1C03               	skipc
  1252     0160  2962               	goto	u1271
  1253     0161  2963               	goto	u1270
  1254     0162                     u1271:
  1255     0162  2967               	goto	l1608
  1256     0163                     u1270:
  1257     0163                     l1606:
  1258                           
  1259                           ;main.c: 97:             clcd_putch(arr[count_letter], (0xC0 + 5 + count_letter));
  1260     0163  1283               	bcf	3,5	;RP0=0, select bank0
  1261     0164  1303               	bcf	3,6	;RP1=0, select bank0
  1262     0165  01BC               	clrf	main@pos
  1263     0166  01BD               	clrf	main@pos+1
  1264     0167                     l1608:
  1265                           
  1266                           ;main.c: 99:         }
  1267     0167  3000               	movlw	0
  1268     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1269     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1270     016A  00D7               	movwf	main@i_87+3
  1271     016B  3000               	movlw	0
  1272     016C  00D6               	movwf	main@i_87+2
  1273     016D  3000               	movlw	0
  1274     016E  00D5               	movwf	main@i_87+1
  1275     016F  3000               	movlw	0
  1276     0170  00D4               	movwf	main@i_87
  1277     0171                     l1614:
  1278     0171  3001               	movlw	1
  1279     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1280     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1281     0174  07D4               	addwf	main@i_87,f
  1282     0175  3000               	movlw	0
  1283     0176  1803               	skipnc
  1284     0177  3001               	movlw	1
  1285     0178  07D5               	addwf	main@i_87+1,f
  1286     0179  3000               	movlw	0
  1287     017A  1803               	skipnc
  1288     017B  3001               	movlw	1
  1289     017C  07D6               	addwf	main@i_87+2,f
  1290     017D  3000               	movlw	0
  1291     017E  1803               	skipnc
  1292     017F  3001               	movlw	1
  1293     0180  07D7               	addwf	main@i_87+3,f
  1294     0181                     l1616:
  1295     0181  0857               	movf	main@i_87+3,w
  1296     0182  1D03               	btfss	3,2
  1297     0183  2993               	goto	u1280
  1298     0184  0856               	movf	main@i_87+2,w
  1299     0185  1D03               	btfss	3,2
  1300     0186  2993               	goto	u1280
  1301     0187  309C               	movlw	156
  1302     0188  0255               	subwf	main@i_87+1,w
  1303     0189  1D03               	skipz
  1304     018A  298F               	goto	u1283
  1305     018B  3040               	movlw	64
  1306     018C  0254               	subwf	main@i_87,w
  1307     018D  1D03               	skipz
  1308     018E  298F               	goto	u1283
  1309     018F                     u1283:
  1310     018F  1C03               	btfss	3,0
  1311     0190  2992               	goto	u1281
  1312     0191  2993               	goto	u1280
  1313     0192                     u1281:
  1314     0192  2971               	goto	l1614
  1315     0193                     u1280:
  1316     0193                     l1618:
  1317                           
  1318                           ;main.c: 102:         {
  1319     0193  1283               	bcf	3,5	;RP0=0, select bank0
  1320     0194  1303               	bcf	3,6	;RP1=0, select bank0
  1321     0195  0359               	decf	main@key,w
  1322     0196  1D03               	btfss	3,2
  1323     0197  2999               	goto	u1291
  1324     0198  299A               	goto	u1290
  1325     0199                     u1291:
  1326     0199  29DD               	goto	l75
  1327     019A                     u1290:
  1328     019A                     l1620:
  1329     019A  0346               	decf	main@edit_key,w
  1330     019B  0447               	iorwf	main@edit_key+1,w
  1331     019C  1D03               	btfss	3,2
  1332     019D  299F               	goto	u1301
  1333     019E  29A0               	goto	u1300
  1334     019F                     u1301:
  1335     019F  29DD               	goto	l75
  1336     01A0                     u1300:
  1337     01A0                     l1622:
  1338                           
  1339                           ;main.c: 103:             arr[count_letter] = arr[count_letter] - 1;;main.c: 104:       
      +                                if(arr[count_letter] > '9')
  1340     01A0  0842               	movf	main@count_letter,w
  1341     01A1  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1342     01A2  0084               	movwf	4
  1343     01A3  1383               	bcf	3,7	;select IRP bank0
  1344     01A4  0800               	movf	0,w
  1345     01A5  3E01               	addlw	1
  1346     01A6  00FF               	movwf	btemp+1
  1347     01A7  0842               	movf	main@count_letter,w
  1348     01A8  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1349     01A9  0084               	movwf	4
  1350     01AA  087F               	movf	btemp+1,w
  1351     01AB  0080               	movwf	0
  1352     01AC                     l1624:
  1353                           
  1354                           ;main.c: 105:             {
  1355     01AC  0842               	movf	main@count_letter,w
  1356     01AD  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1357     01AE  0084               	movwf	4
  1358     01AF  303A               	movlw	58
  1359     01B0  0200               	subwf	0,w
  1360     01B1  1C03               	skipc
  1361     01B2  29B4               	goto	u1311
  1362     01B3  29B5               	goto	u1310
  1363     01B4                     u1311:
  1364     01B4  29BA               	goto	l76
  1365     01B5                     u1310:
  1366     01B5                     l1626:
  1367                           
  1368                           ;main.c: 106:                 arr[count_letter] = '0';;main.c: 107:             }
  1369     01B5  0842               	movf	main@count_letter,w
  1370     01B6  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1371     01B7  0084               	movwf	4
  1372     01B8  3030               	movlw	48
  1373     01B9  0080               	movwf	0
  1374     01BA                     l76:	
  1375                           ;main.c: 108:             if(arr[count_letter] < '0')
  1376                           
  1377                           
  1378                           ;main.c: 109:             {
  1379     01BA  0842               	movf	main@count_letter,w
  1380     01BB  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1381     01BC  0084               	movwf	4
  1382     01BD  3030               	movlw	48
  1383     01BE  0200               	subwf	0,w
  1384     01BF  1803               	skipnc
  1385     01C0  29C2               	goto	u1321
  1386     01C1  29C3               	goto	u1320
  1387     01C2                     u1321:
  1388     01C2  29C8               	goto	l1630
  1389     01C3                     u1320:
  1390     01C3                     l1628:
  1391                           
  1392                           ;main.c: 110:                 arr[count_letter] = '9';;main.c: 111:             }
  1393     01C3  0842               	movf	main@count_letter,w
  1394     01C4  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1395     01C5  0084               	movwf	4
  1396     01C6  3039               	movlw	57
  1397     01C7  0080               	movwf	0
  1398     01C8                     l1630:
  1399                           
  1400                           ;main.c: 113:             clcd_write(0x10, 0);
  1401     01C8  0842               	movf	main@count_letter,w
  1402     01C9  3EC5               	addlw	197
  1403     01CA  00CC               	movwf	clcd_putch@addr
  1404     01CB  0842               	movf	main@count_letter,w
  1405     01CC  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1406     01CD  0084               	movwf	4
  1407     01CE  0800               	movf	0,w
  1408     01CF  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1409     01D4                     l1632:
  1410                           
  1411                           ;main.c: 114:         }
  1412     01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1413     01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1414     01D6  01C8               	clrf	clcd_write@mode
  1415     01D7  3010               	movlw	16
  1416     01D8  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1417     01DD                     l75:	
  1418                           ;main.c: 115: 
  1419                           
  1420                           
  1421                           ;main.c: 117:         {
  1422     01DD  3002               	movlw	2
  1423     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1424     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1425     01E0  0659               	xorwf	main@key,w
  1426     01E1  1D03               	btfss	3,2
  1427     01E2  29E4               	goto	u1331
  1428     01E3  29E5               	goto	u1330
  1429     01E4                     u1331:
  1430     01E4  2A28               	goto	l78
  1431     01E5                     u1330:
  1432     01E5                     l1634:
  1433     01E5  0346               	decf	main@edit_key,w
  1434     01E6  0447               	iorwf	main@edit_key+1,w
  1435     01E7  1D03               	btfss	3,2
  1436     01E8  29EA               	goto	u1341
  1437     01E9  29EB               	goto	u1340
  1438     01EA                     u1341:
  1439     01EA  2A28               	goto	l78
  1440     01EB                     u1340:
  1441     01EB                     l1636:
  1442                           
  1443                           ;main.c: 118:             edit_key = !edit_key;;main.c: 119: 
  1444     01EB  0842               	movf	main@count_letter,w
  1445     01EC  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1446     01ED  0084               	movwf	4
  1447     01EE  1383               	bcf	3,7	;select IRP bank0
  1448     01EF  0800               	movf	0,w
  1449     01F0  3EFF               	addlw	255
  1450     01F1  00FF               	movwf	btemp+1
  1451     01F2  0842               	movf	main@count_letter,w
  1452     01F3  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1453     01F4  0084               	movwf	4
  1454     01F5  087F               	movf	btemp+1,w
  1455     01F6  0080               	movwf	0
  1456     01F7                     l1638:
  1457                           
  1458                           ;main.c: 120:             flag1 = !flag1;
  1459     01F7  0842               	movf	main@count_letter,w
  1460     01F8  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1461     01F9  0084               	movwf	4
  1462     01FA  303A               	movlw	58
  1463     01FB  0200               	subwf	0,w
  1464     01FC  1C03               	skipc
  1465     01FD  29FF               	goto	u1351
  1466     01FE  2A00               	goto	u1350
  1467     01FF                     u1351:
  1468     01FF  2A05               	goto	l79
  1469     0200                     u1350:
  1470     0200                     l1640:
  1471                           
  1472                           ;main.c: 121:             if(flag1 == 1);main.c: 122:             {
  1473     0200  0842               	movf	main@count_letter,w
  1474     0201  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1475     0202  0084               	movwf	4
  1476     0203  3030               	movlw	48
  1477     0204  0080               	movwf	0
  1478     0205                     l79:	
  1479                           ;main.c: 123:                 cur_key = 1;
  1480                           
  1481                           
  1482                           ;main.c: 124:             }
  1483     0205  0842               	movf	main@count_letter,w
  1484     0206  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1485     0207  0084               	movwf	4
  1486     0208  3030               	movlw	48
  1487     0209  0200               	subwf	0,w
  1488     020A  1803               	skipnc
  1489     020B  2A0D               	goto	u1361
  1490     020C  2A0E               	goto	u1360
  1491     020D                     u1361:
  1492     020D  2A13               	goto	l1644
  1493     020E                     u1360:
  1494     020E                     l1642:
  1495                           
  1496                           ;main.c: 125:             clcd_write(0x0C, 0);;main.c: 126:             clcd_write(0x01,
      +                          0);
  1497     020E  0842               	movf	main@count_letter,w
  1498     020F  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1499     0210  0084               	movwf	4
  1500     0211  3039               	movlw	57
  1501     0212  0080               	movwf	0
  1502     0213                     l1644:
  1503                           
  1504                           ;main.c: 128:             clcd_print("Release stop key", (0xC0 + 0));
  1505     0213  0842               	movf	main@count_letter,w
  1506     0214  3EC5               	addlw	197
  1507     0215  00CC               	movwf	clcd_putch@addr
  1508     0216  0842               	movf	main@count_letter,w
  1509     0217  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1510     0218  0084               	movwf	4
  1511     0219  0800               	movf	0,w
  1512     021A  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1513     021F                     l1646:
  1514                           
  1515                           ;main.c: 129:         }
  1516     021F  1283               	bcf	3,5	;RP0=0, select bank0
  1517     0220  1303               	bcf	3,6	;RP1=0, select bank0
  1518     0221  01C8               	clrf	clcd_write@mode
  1519     0222  3010               	movlw	16
  1520     0223  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1521     0228                     l78:	
  1522                           ;main.c: 130: 
  1523                           
  1524                           
  1525                           ;main.c: 132:         {
  1526     0228  3003               	movlw	3
  1527     0229  1283               	bcf	3,5	;RP0=0, select bank0
  1528     022A  1303               	bcf	3,6	;RP1=0, select bank0
  1529     022B  0659               	xorwf	main@key,w
  1530     022C  1D03               	btfss	3,2
  1531     022D  2A2F               	goto	u1371
  1532     022E  2A30               	goto	u1370
  1533     022F                     u1371:
  1534     022F  2A78               	goto	l1658
  1535     0230                     u1370:
  1536     0230                     l1648:
  1537                           
  1538                           ;main.c: 133:             edit_key = 1;;main.c: 134:             flag1 = 0;
  1539     0230  0846               	movf	main@edit_key,w
  1540     0231  0447               	iorwf	main@edit_key+1,w
  1541     0232  1903               	btfsc	3,2
  1542     0233  2A35               	goto	u1381
  1543     0234  2A37               	goto	u1380
  1544     0235                     u1381:
  1545     0235  3001               	movlw	1
  1546     0236  2A38               	goto	u1390
  1547     0237                     u1380:
  1548     0237  3000               	movlw	0
  1549     0238                     u1390:
  1550     0238  00CE               	movwf	??_main
  1551     0239  01CF               	clrf	??_main+1
  1552     023A  084E               	movf	??_main,w
  1553     023B  00C6               	movwf	main@edit_key
  1554     023C  084F               	movf	??_main+1,w
  1555     023D  00C7               	movwf	main@edit_key+1
  1556                           
  1557                           ;main.c: 136:             arr[count_letter] = '0';
  1558     023E  0844               	movf	main@flag1,w
  1559     023F  0445               	iorwf	main@flag1+1,w
  1560     0240  1903               	btfsc	3,2
  1561     0241  2A43               	goto	u1401
  1562     0242  2A45               	goto	u1400
  1563     0243                     u1401:
  1564     0243  3001               	movlw	1
  1565     0244  2A46               	goto	u1410
  1566     0245                     u1400:
  1567     0245  3000               	movlw	0
  1568     0246                     u1410:
  1569     0246  00CE               	movwf	??_main
  1570     0247  01CF               	clrf	??_main+1
  1571     0248  084E               	movf	??_main,w
  1572     0249  00C4               	movwf	main@flag1
  1573     024A  084F               	movf	??_main+1,w
  1574     024B  00C5               	movwf	main@flag1+1
  1575                           
  1576                           ;main.c: 137:             clcd_write(0x01,0);
  1577     024C  0344               	decf	main@flag1,w
  1578     024D  0445               	iorwf	main@flag1+1,w
  1579     024E  1D03               	btfss	3,2
  1580     024F  2A51               	goto	u1421
  1581     0250  2A52               	goto	u1420
  1582     0251                     u1421:
  1583     0251  2A54               	goto	l1652
  1584     0252                     u1420:
  1585     0252                     l1650:
  1586                           
  1587                           ;main.c: 138:             clcd_print("Enter New Number", (0x80 + 0));;main.c: 139:      
      +                                 clcd_print("Msg:", (0xC0 + 0));
  1588     0252  01D8               	clrf	main@cur_key
  1589     0253  0AD8               	incf	main@cur_key,f
  1590     0254                     l1652:
  1591                           
  1592                           ;main.c: 141:             clcd_write(0x0F, 0);
  1593     0254  01C8               	clrf	clcd_write@mode
  1594     0255  300C               	movlw	12
  1595     0256  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1596                           
  1597                           ;main.c: 142:             clcd_write(0x10, 0);
  1598     025B  1283               	bcf	3,5	;RP0=0, select bank0
  1599     025C  1303               	bcf	3,6	;RP1=0, select bank0
  1600     025D  01C8               	clrf	clcd_write@mode
  1601     025E  3001               	movlw	1
  1602     025F  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1603     0264                     l1654:
  1604                           
  1605                           ;main.c: 143: 
  1606     0264  3080               	movlw	128
  1607     0265  1283               	bcf	3,5	;RP0=0, select bank0
  1608     0266  1303               	bcf	3,6	;RP1=0, select bank0
  1609     0267  00CC               	movwf	clcd_print@addr
  1610     0268  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1611     0269  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  1612     026E                     l1656:
  1613                           
  1614                           ;main.c: 144:             flag2 = 0;
  1615     026E  30C0               	movlw	192
  1616     026F  1283               	bcf	3,5	;RP0=0, select bank0
  1617     0270  1303               	bcf	3,6	;RP1=0, select bank0
  1618     0271  00CC               	movwf	clcd_print@addr
  1619     0272  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1620     0273  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  1621     0278                     l1658:
  1622                           
  1623                           ;main.c: 147:         if(key == 5 && edit_key == 1)
  1624     0278  3004               	movlw	4
  1625     0279  1283               	bcf	3,5	;RP0=0, select bank0
  1626     027A  1303               	bcf	3,6	;RP1=0, select bank0
  1627     027B  0659               	xorwf	main@key,w
  1628     027C  1903               	btfsc	3,2
  1629     027D  2A7F               	goto	u1431
  1630     027E  2A80               	goto	u1430
  1631     027F                     u1431:
  1632     027F  2A86               	goto	l1662
  1633     0280                     u1430:
  1634     0280                     l1660:
  1635     0280  085A               	movf	main@flag2,w
  1636     0281  045B               	iorwf	main@flag2+1,w
  1637     0282  1903               	btfsc	3,2
  1638     0283  2A85               	goto	u1441
  1639     0284  2A86               	goto	u1440
  1640     0285                     u1441:
  1641     0285  2ACB               	goto	l1684
  1642     0286                     u1440:
  1643     0286                     l1662:
  1644                           
  1645                           ;main.c: 148:         {;main.c: 149:             count_letter++;
  1646     0286  3001               	movlw	1
  1647     0287  00C6               	movwf	main@edit_key
  1648     0288  3000               	movlw	0
  1649     0289  00C7               	movwf	main@edit_key+1
  1650     028A                     l1664:
  1651                           
  1652                           ;main.c: 150:             arr[count_letter] = '0';
  1653     028A  01C4               	clrf	main@flag1
  1654     028B  01C5               	clrf	main@flag1+1
  1655     028C                     l1666:
  1656                           
  1657                           ;main.c: 151:             if(count_letter > 10)
  1658     028C  01C2               	clrf	main@count_letter
  1659     028D  01C3               	clrf	main@count_letter+1
  1660     028E                     l1668:
  1661                           
  1662                           ;main.c: 152:             {
  1663     028E  3030               	movlw	48
  1664     028F  00A0               	movwf	main@arr
  1665     0290                     l1670:
  1666                           
  1667                           ;main.c: 153:                 count_letter = 10;
  1668     0290  01C8               	clrf	clcd_write@mode
  1669     0291  3001               	movlw	1
  1670     0292  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1671     0297                     l1672:
  1672                           
  1673                           ;main.c: 154:             }
  1674     0297  3080               	movlw	128
  1675     0298  1283               	bcf	3,5	;RP0=0, select bank0
  1676     0299  1303               	bcf	3,6	;RP1=0, select bank0
  1677     029A  00CC               	movwf	clcd_print@addr
  1678     029B  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1679     029C  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  1680     02A1                     l1674:
  1681                           
  1682                           ;main.c: 155:             clcd_putch(arr[count_letter], (0xC0 + 5 + count_letter));
  1683     02A1  30C0               	movlw	192
  1684     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1685     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1686     02A4  00CC               	movwf	clcd_print@addr
  1687     02A5  3045               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1688     02A6  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  1689     02AB                     l1676:
  1690                           
  1691                           ;main.c: 156:             clcd_write(0x10, 0);
  1692     02AB  30C5               	movlw	197
  1693     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1694     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1695     02AE  00CC               	movwf	clcd_putch@addr
  1696     02AF  0820               	movf	main@arr,w
  1697     02B0  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1698     02B5                     l1678:
  1699                           
  1700                           ;main.c: 157:         }
  1701     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1702     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1703     02B7  01C8               	clrf	clcd_write@mode
  1704     02B8  300F               	movlw	15
  1705     02B9  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1706     02BE                     l1680:
  1707                           
  1708                           ;main.c: 158: 
  1709     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1710     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1711     02C0  01C8               	clrf	clcd_write@mode
  1712     02C1  3010               	movlw	16
  1713     02C2  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1714     02C7                     l1682:
  1715                           
  1716                           ;main.c: 160:         {
  1717     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1718     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1719     02C9  01DA               	clrf	main@flag2
  1720     02CA  01DB               	clrf	main@flag2+1
  1721     02CB                     l1684:
  1722                           
  1723                           ;main.c: 163:             count_letter--;
  1724     02CB  3005               	movlw	5
  1725     02CC  0659               	xorwf	main@key,w
  1726     02CD  1D03               	btfss	3,2
  1727     02CE  2AD0               	goto	u1451
  1728     02CF  2AD1               	goto	u1450
  1729     02D0                     u1451:
  1730     02D0  2B0E               	goto	l1700
  1731     02D1                     u1450:
  1732     02D1                     l1686:
  1733     02D1  0346               	decf	main@edit_key,w
  1734     02D2  0447               	iorwf	main@edit_key+1,w
  1735     02D3  1D03               	btfss	3,2
  1736     02D4  2AD6               	goto	u1461
  1737     02D5  2AD7               	goto	u1460
  1738     02D6                     u1461:
  1739     02D6  2B0E               	goto	l1700
  1740     02D7                     u1460:
  1741     02D7                     l1688:
  1742                           
  1743                           ;main.c: 164:             if(count_letter < 0);main.c: 165:             {
  1744     02D7  3001               	movlw	1
  1745     02D8  07C2               	addwf	main@count_letter,f
  1746     02D9  1803               	skipnc
  1747     02DA  0AC3               	incf	main@count_letter+1,f
  1748     02DB  3000               	movlw	0
  1749     02DC  07C3               	addwf	main@count_letter+1,f
  1750     02DD                     l1690:
  1751                           
  1752                           ;main.c: 166:                 count_letter = 0;
  1753     02DD  0842               	movf	main@count_letter,w
  1754     02DE  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1755     02DF  0084               	movwf	4
  1756     02E0  3030               	movlw	48
  1757     02E1  1383               	bcf	3,7	;select IRP bank0
  1758     02E2  0080               	movwf	0
  1759     02E3                     l1692:
  1760                           
  1761                           ;main.c: 167:             }
  1762     02E3  0843               	movf	main@count_letter+1,w
  1763     02E4  3A80               	xorlw	128
  1764     02E5  00FF               	movwf	btemp+1
  1765     02E6  3080               	movlw	128
  1766     02E7  027F               	subwf	btemp+1,w
  1767     02E8  1D03               	skipz
  1768     02E9  2AEC               	goto	u1475
  1769     02EA  300B               	movlw	11
  1770     02EB  0242               	subwf	main@count_letter,w
  1771     02EC                     u1475:
  1772     02EC  1C03               	skipc
  1773     02ED  2AEF               	goto	u1471
  1774     02EE  2AF0               	goto	u1470
  1775     02EF                     u1471:
  1776     02EF  2AF6               	goto	l1696
  1777     02F0                     u1470:
  1778     02F0                     l1694:
  1779                           
  1780                           ;main.c: 168:             clcd_write(0x10, 0);;main.c: 169:             clcd_write(0x10,
      +                           0);
  1781     02F0  300A               	movlw	10
  1782     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1783     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1784     02F3  00C2               	movwf	main@count_letter
  1785     02F4  3000               	movlw	0
  1786     02F5  00C3               	movwf	main@count_letter+1
  1787     02F6                     l1696:
  1788                           
  1789                           ;main.c: 171:         }
  1790     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1791     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1792     02F8  0842               	movf	main@count_letter,w
  1793     02F9  3EC5               	addlw	197
  1794     02FA  00CC               	movwf	clcd_putch@addr
  1795     02FB  0842               	movf	main@count_letter,w
  1796     02FC  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1797     02FD  0084               	movwf	4
  1798     02FE  1383               	bcf	3,7	;select IRP bank0
  1799     02FF  0800               	movf	0,w
  1800     0300  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1801     0305                     l1698:
  1802                           
  1803                           ;main.c: 172:     }
  1804     0305  1283               	bcf	3,5	;RP0=0, select bank0
  1805     0306  1303               	bcf	3,6	;RP1=0, select bank0
  1806     0307  01C8               	clrf	clcd_write@mode
  1807     0308  3010               	movlw	16
  1808     0309  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1809     030E                     l1700:
  1810     030E  3006               	movlw	6
  1811     030F  1283               	bcf	3,5	;RP0=0, select bank0
  1812     0310  1303               	bcf	3,6	;RP1=0, select bank0
  1813     0311  0659               	xorwf	main@key,w
  1814     0312  1D03               	btfss	3,2
  1815     0313  2B15               	goto	u1481
  1816     0314  2B16               	goto	u1480
  1817     0315                     u1481:
  1818     0315  2837               	goto	l1534
  1819     0316                     u1480:
  1820     0316                     l1702:
  1821     0316  0346               	decf	main@edit_key,w
  1822     0317  0447               	iorwf	main@edit_key+1,w
  1823     0318  1D03               	btfss	3,2
  1824     0319  2B1B               	goto	u1491
  1825     031A  2B1C               	goto	u1490
  1826     031B                     u1491:
  1827     031B  2837               	goto	l1534
  1828     031C                     u1490:
  1829     031C                     l1704:
  1830     031C  0842               	movf	main@count_letter,w
  1831     031D  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1832     031E  0084               	movwf	4
  1833     031F  3030               	movlw	48
  1834     0320  1383               	bcf	3,7	;select IRP bank0
  1835     0321  0080               	movwf	0
  1836     0322                     l1706:
  1837     0322  0842               	movf	main@count_letter,w
  1838     0323  3EC5               	addlw	197
  1839     0324  00CC               	movwf	clcd_putch@addr
  1840     0325  3000               	movlw	0
  1841     0326  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1842     032B                     l1708:
  1843     032B  30FF               	movlw	255
  1844     032C  1283               	bcf	3,5	;RP0=0, select bank0
  1845     032D  1303               	bcf	3,6	;RP1=0, select bank0
  1846     032E  07C2               	addwf	main@count_letter,f
  1847     032F  1803               	skipnc
  1848     0330  0AC3               	incf	main@count_letter+1,f
  1849     0331  30FF               	movlw	255
  1850     0332  07C3               	addwf	main@count_letter+1,f
  1851     0333                     l1710:
  1852     0333  1FC3               	btfss	main@count_letter+1,7
  1853     0334  2B36               	goto	u1501
  1854     0335  2B37               	goto	u1500
  1855     0336                     u1501:
  1856     0336  2B39               	goto	l1714
  1857     0337                     u1500:
  1858     0337                     l1712:
  1859     0337  01C2               	clrf	main@count_letter
  1860     0338  01C3               	clrf	main@count_letter+1
  1861     0339                     l1714:
  1862     0339  01C8               	clrf	clcd_write@mode
  1863     033A  3010               	movlw	16
  1864     033B  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1865     0340                     l1716:
  1866     0340  1283               	bcf	3,5	;RP0=0, select bank0
  1867     0341  1303               	bcf	3,6	;RP1=0, select bank0
  1868     0342  01C8               	clrf	clcd_write@mode
  1869     0343  3010               	movlw	16
  1870     0344  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1871     0349  2837               	goto	l1534
  1872     034A  120A  118A  280E   	ljmp	start
  1873     034D                     __end_of_main:
  1874                           
  1875                           	psect	text1
  1876     062D                     __ptext1:	
  1877 ;; *************** function _read_matrix_keypad *****************
  1878 ;; Defined at:
  1879 ;;		line 121 in file "matrix_keypad.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  mode            1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  mode            1    2[BANK0 ] unsigned char 
  1884 ;;  key             1    3[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       0       0       0
  1895 ;;      Locals:         0       2       0       0       0
  1896 ;;      Temps:          0       0       0       0       0
  1897 ;;      Totals:         0       2       0       0       0
  1898 ;;Total ram usage:        2 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 3
  1901 ;; This function calls:
  1902 ;;		_scan_keypad
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908     062D                     _read_matrix_keypad:	
  1909                           ;psect for function _read_matrix_keypad
  1910                           
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1914                           ;read_matrix_keypad@mode stored from wreg
  1915     062D  1283               	bcf	3,5	;RP0=0, select bank0
  1916     062E  1303               	bcf	3,6	;RP1=0, select bank0
  1917     062F  00CA               	movwf	read_matrix_keypad@mode
  1918     0630                     l1456:
  1919                           
  1920                           ;matrix_keypad.c: 121: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 122: {;matrix_keypad.c: 123:     static unsigned char once = 1;;matrix_keypad.c: 12
      +                          4:     unsigned char key;;matrix_keypad.c: 126:     key = scan_keypad();
  1921     0630  120A  118A  234D  120A  118A  	fcall	_scan_keypad
  1922     0635  1283               	bcf	3,5	;RP0=0, select bank0
  1923     0636  1303               	bcf	3,6	;RP1=0, select bank0
  1924     0637  00CB               	movwf	read_matrix_keypad@key
  1925     0638                     l1458:
  1926                           
  1927                           ;matrix_keypad.c: 128:     if (mode == 0)
  1928     0638  084A               	movf	read_matrix_keypad@mode,w
  1929     0639  1D03               	btfss	3,2
  1930     063A  2E3C               	goto	u1001
  1931     063B  2E3D               	goto	u1000
  1932     063C                     u1001:
  1933     063C  2E3F               	goto	l1466
  1934     063D                     u1000:
  1935     063D                     l1460:
  1936                           
  1937                           ;matrix_keypad.c: 129:     {;matrix_keypad.c: 130:         return key;
  1938     063D  084B               	movf	read_matrix_keypad@key,w
  1939     063E  2E53               	goto	l188
  1940     063F                     l1466:
  1941                           
  1942                           ;matrix_keypad.c: 133:     {;matrix_keypad.c: 134:         if ((key != 0xFF) && once)
  1943     063F  0A4B               	incf	read_matrix_keypad@key,w
  1944     0640  1903               	btfsc	3,2
  1945     0641  2E43               	goto	u1011
  1946     0642  2E44               	goto	u1010
  1947     0643                     u1011:
  1948     0643  2E4B               	goto	l1478
  1949     0644                     u1010:
  1950     0644                     l1468:
  1951     0644  085C               	movf	read_matrix_keypad@once,w
  1952     0645  1903               	btfsc	3,2
  1953     0646  2E48               	goto	u1021
  1954     0647  2E49               	goto	u1020
  1955     0648                     u1021:
  1956     0648  2E4B               	goto	l1478
  1957     0649                     u1020:
  1958     0649                     l1470:
  1959                           
  1960                           ;matrix_keypad.c: 135:         {;matrix_keypad.c: 136:             once = 0;
  1961     0649  01DC               	clrf	read_matrix_keypad@once
  1962     064A  2E3D               	goto	l1460
  1963     064B                     l1478:
  1964     064B  0A4B               	incf	read_matrix_keypad@key,w
  1965     064C  1D03               	btfss	3,2
  1966     064D  2E4F               	goto	u1031
  1967     064E  2E50               	goto	u1030
  1968     064F                     u1031:
  1969     064F  2E52               	goto	l1482
  1970     0650                     u1030:
  1971     0650                     l1480:
  1972                           
  1973                           ;matrix_keypad.c: 141:         {;matrix_keypad.c: 142:             once = 1;
  1974     0650  01DC               	clrf	read_matrix_keypad@once
  1975     0651  0ADC               	incf	read_matrix_keypad@once,f
  1976     0652                     l1482:
  1977                           
  1978                           ;matrix_keypad.c: 146:     return 0xFF;
  1979     0652  30FF               	movlw	255
  1980     0653                     l188:
  1981     0653  0008               	return
  1982     0654                     __end_of_read_matrix_keypad:
  1983                           
  1984                           	psect	text2
  1985     034D                     __ptext2:	
  1986 ;; *************** function _scan_keypad *****************
  1987 ;; Defined at:
  1988 ;;		line 34 in file "matrix_keypad.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  i               2    0[BANK0 ] int 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      unsigned char 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       0       0       0
  2003 ;;      Locals:         0       2       0       0       0
  2004 ;;      Temps:          0       0       0       0       0
  2005 ;;      Totals:         0       2       0       0       0
  2006 ;;Total ram usage:        2 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 2
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_read_matrix_keypad
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016     034D                     _scan_keypad:	
  2017                           ;psect for function _scan_keypad
  2018                           
  2019     034D                     l1344:	
  2020                           ;incstack = 0
  2021                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  2022                           
  2023                           
  2024                           ;matrix_keypad.c: 36:     int i;;matrix_keypad.c: 38:     RD3 = 0;
  2025     034D  1283               	bcf	3,5	;RP0=0, select bank0
  2026     034E  1303               	bcf	3,6	;RP1=0, select bank0
  2027     034F  1188               	bcf	8,3	;volatile
  2028                           
  2029                           ;matrix_keypad.c: 39:     RD2 = 1;
  2030     0350  1508               	bsf	8,2	;volatile
  2031                           
  2032                           ;matrix_keypad.c: 40:     RD1 = 1;
  2033     0351  1488               	bsf	8,1	;volatile
  2034                           
  2035                           ;matrix_keypad.c: 41:     RD0 = 1;
  2036     0352  1408               	bsf	8,0	;volatile
  2037     0353                     l1346:
  2038                           
  2039                           ;matrix_keypad.c: 43:     for (i = 100; i--; );
  2040     0353  3064               	movlw	100
  2041     0354  00C8               	movwf	scan_keypad@i
  2042     0355  3000               	movlw	0
  2043     0356  00C9               	movwf	scan_keypad@i+1
  2044     0357                     l1348:
  2045     0357  30FF               	movlw	255
  2046     0358  07C8               	addwf	scan_keypad@i,f
  2047     0359  1803               	skipnc
  2048     035A  0AC9               	incf	scan_keypad@i+1,f
  2049     035B  30FF               	movlw	255
  2050     035C  07C9               	addwf	scan_keypad@i+1,f
  2051     035D  0A48               	incf	scan_keypad@i,w
  2052     035E  1D03               	skipz
  2053     035F  2B64               	goto	u811
  2054     0360  0A49               	incf	scan_keypad@i+1,w
  2055     0361  1D03               	btfss	3,2
  2056     0362  2B64               	goto	u811
  2057     0363  2B65               	goto	u810
  2058     0364                     u811:
  2059     0364  2B57               	goto	l1348
  2060     0365                     u810:
  2061     0365                     l152:
  2062                           
  2063                           ;matrix_keypad.c: 45:     if (RB0 == 0)
  2064     0365  1806               	btfsc	6,0	;volatile
  2065     0366  2B68               	goto	u821
  2066     0367  2B69               	goto	u820
  2067     0368                     u821:
  2068     0368  2B6B               	goto	l153
  2069     0369                     u820:
  2070     0369                     l1350:
  2071                           
  2072                           ;matrix_keypad.c: 46:     {;matrix_keypad.c: 47:         return 1;
  2073     0369  3001               	movlw	1
  2074     036A  2BF0               	goto	l154
  2075     036B                     l153:	
  2076                           ;matrix_keypad.c: 49:     else if (RB1 == 0)
  2077                           
  2078     036B  1886               	btfsc	6,1	;volatile
  2079     036C  2B6E               	goto	u831
  2080     036D  2B6F               	goto	u830
  2081     036E                     u831:
  2082     036E  2B71               	goto	l156
  2083     036F                     u830:
  2084     036F                     l1356:
  2085                           
  2086                           ;matrix_keypad.c: 50:     {;matrix_keypad.c: 51:         return 2;
  2087     036F  3002               	movlw	2
  2088     0370  2BF0               	goto	l154
  2089     0371                     l156:	
  2090                           ;matrix_keypad.c: 53:     else if (RB2 == 0)
  2091                           
  2092     0371  1906               	btfsc	6,2	;volatile
  2093     0372  2B74               	goto	u841
  2094     0373  2B75               	goto	u840
  2095     0374                     u841:
  2096     0374  2B77               	goto	l155
  2097     0375                     u840:
  2098     0375                     l1362:
  2099                           
  2100                           ;matrix_keypad.c: 54:     {;matrix_keypad.c: 55:         return 3;
  2101     0375  3003               	movlw	3
  2102     0376  2BF0               	goto	l154
  2103     0377                     l155:
  2104                           
  2105                           ;matrix_keypad.c: 58:     RD3 = 1;
  2106     0377  1588               	bsf	8,3	;volatile
  2107                           
  2108                           ;matrix_keypad.c: 59:     RD2 = 0;
  2109     0378  1108               	bcf	8,2	;volatile
  2110                           
  2111                           ;matrix_keypad.c: 60:     RD1 = 1;
  2112     0379  1488               	bsf	8,1	;volatile
  2113                           
  2114                           ;matrix_keypad.c: 61:     RD0 = 1;
  2115     037A  1408               	bsf	8,0	;volatile
  2116     037B                     l1366:
  2117                           
  2118                           ;matrix_keypad.c: 63:     for (i = 100; i--; );
  2119     037B  3064               	movlw	100
  2120     037C  00C8               	movwf	scan_keypad@i
  2121     037D  3000               	movlw	0
  2122     037E  00C9               	movwf	scan_keypad@i+1
  2123     037F                     l1368:
  2124     037F  30FF               	movlw	255
  2125     0380  07C8               	addwf	scan_keypad@i,f
  2126     0381  1803               	skipnc
  2127     0382  0AC9               	incf	scan_keypad@i+1,f
  2128     0383  30FF               	movlw	255
  2129     0384  07C9               	addwf	scan_keypad@i+1,f
  2130     0385  0A48               	incf	scan_keypad@i,w
  2131     0386  1D03               	skipz
  2132     0387  2B8C               	goto	u851
  2133     0388  0A49               	incf	scan_keypad@i+1,w
  2134     0389  1D03               	btfss	3,2
  2135     038A  2B8C               	goto	u851
  2136     038B  2B8D               	goto	u850
  2137     038C                     u851:
  2138     038C  2B7F               	goto	l1368
  2139     038D                     u850:
  2140     038D                     l161:
  2141                           
  2142                           ;matrix_keypad.c: 65:     if (RB0 == 0)
  2143     038D  1806               	btfsc	6,0	;volatile
  2144     038E  2B90               	goto	u861
  2145     038F  2B91               	goto	u860
  2146     0390                     u861:
  2147     0390  2B93               	goto	l162
  2148     0391                     u860:
  2149     0391                     l1370:
  2150                           
  2151                           ;matrix_keypad.c: 66:     {;matrix_keypad.c: 67:         return 4;
  2152     0391  3004               	movlw	4
  2153     0392  2BF0               	goto	l154
  2154     0393                     l162:	
  2155                           ;matrix_keypad.c: 69:     else if (RB1 == 0)
  2156                           
  2157     0393  1886               	btfsc	6,1	;volatile
  2158     0394  2B96               	goto	u871
  2159     0395  2B97               	goto	u870
  2160     0396                     u871:
  2161     0396  2B99               	goto	l164
  2162     0397                     u870:
  2163     0397                     l1376:
  2164                           
  2165                           ;matrix_keypad.c: 70:     {;matrix_keypad.c: 71:         return 5;
  2166     0397  3005               	movlw	5
  2167     0398  2BF0               	goto	l154
  2168     0399                     l164:	
  2169                           ;matrix_keypad.c: 73:     else if (RB2 == 0)
  2170                           
  2171     0399  1906               	btfsc	6,2	;volatile
  2172     039A  2B9C               	goto	u881
  2173     039B  2B9D               	goto	u880
  2174     039C                     u881:
  2175     039C  2B9F               	goto	l163
  2176     039D                     u880:
  2177     039D                     l1382:
  2178                           
  2179                           ;matrix_keypad.c: 74:     {;matrix_keypad.c: 75:         return 6;
  2180     039D  3006               	movlw	6
  2181     039E  2BF0               	goto	l154
  2182     039F                     l163:
  2183                           
  2184                           ;matrix_keypad.c: 78:     RD3 = 1;
  2185     039F  1588               	bsf	8,3	;volatile
  2186                           
  2187                           ;matrix_keypad.c: 79:     RD2 = 1;
  2188     03A0  1508               	bsf	8,2	;volatile
  2189                           
  2190                           ;matrix_keypad.c: 80:     RD1 = 0;
  2191     03A1  1088               	bcf	8,1	;volatile
  2192                           
  2193                           ;matrix_keypad.c: 81:     RD0 = 1;
  2194     03A2  1408               	bsf	8,0	;volatile
  2195     03A3                     l1386:
  2196                           
  2197                           ;matrix_keypad.c: 83:     for (i = 100; i--; );
  2198     03A3  3064               	movlw	100
  2199     03A4  00C8               	movwf	scan_keypad@i
  2200     03A5  3000               	movlw	0
  2201     03A6  00C9               	movwf	scan_keypad@i+1
  2202     03A7                     l1388:
  2203     03A7  30FF               	movlw	255
  2204     03A8  07C8               	addwf	scan_keypad@i,f
  2205     03A9  1803               	skipnc
  2206     03AA  0AC9               	incf	scan_keypad@i+1,f
  2207     03AB  30FF               	movlw	255
  2208     03AC  07C9               	addwf	scan_keypad@i+1,f
  2209     03AD  0A48               	incf	scan_keypad@i,w
  2210     03AE  1D03               	skipz
  2211     03AF  2BB4               	goto	u891
  2212     03B0  0A49               	incf	scan_keypad@i+1,w
  2213     03B1  1D03               	btfss	3,2
  2214     03B2  2BB4               	goto	u891
  2215     03B3  2BB5               	goto	u890
  2216     03B4                     u891:
  2217     03B4  2BA7               	goto	l1388
  2218     03B5                     u890:
  2219     03B5                     l169:
  2220                           
  2221                           ;matrix_keypad.c: 85:     if (RB0 == 0)
  2222     03B5  1806               	btfsc	6,0	;volatile
  2223     03B6  2BB8               	goto	u901
  2224     03B7  2BB9               	goto	u900
  2225     03B8                     u901:
  2226     03B8  2BBB               	goto	l170
  2227     03B9                     u900:
  2228     03B9                     l1390:
  2229                           
  2230                           ;matrix_keypad.c: 86:     {;matrix_keypad.c: 87:         return 7;
  2231     03B9  3007               	movlw	7
  2232     03BA  2BF0               	goto	l154
  2233     03BB                     l170:	
  2234                           ;matrix_keypad.c: 89:     else if (RB1 == 0)
  2235                           
  2236     03BB  1886               	btfsc	6,1	;volatile
  2237     03BC  2BBE               	goto	u911
  2238     03BD  2BBF               	goto	u910
  2239     03BE                     u911:
  2240     03BE  2BC1               	goto	l172
  2241     03BF                     u910:
  2242     03BF                     l1396:
  2243                           
  2244                           ;matrix_keypad.c: 90:     {;matrix_keypad.c: 91:         return 8;
  2245     03BF  3008               	movlw	8
  2246     03C0  2BF0               	goto	l154
  2247     03C1                     l172:	
  2248                           ;matrix_keypad.c: 93:     else if (RB2 == 0)
  2249                           
  2250     03C1  1906               	btfsc	6,2	;volatile
  2251     03C2  2BC4               	goto	u921
  2252     03C3  2BC5               	goto	u920
  2253     03C4                     u921:
  2254     03C4  2BC7               	goto	l171
  2255     03C5                     u920:
  2256     03C5                     l1402:
  2257                           
  2258                           ;matrix_keypad.c: 94:     {;matrix_keypad.c: 95:         return 9;
  2259     03C5  3009               	movlw	9
  2260     03C6  2BF0               	goto	l154
  2261     03C7                     l171:
  2262                           
  2263                           ;matrix_keypad.c: 98:     RD3 = 1;
  2264     03C7  1588               	bsf	8,3	;volatile
  2265                           
  2266                           ;matrix_keypad.c: 99:     RD2 = 1;
  2267     03C8  1508               	bsf	8,2	;volatile
  2268                           
  2269                           ;matrix_keypad.c: 100:     RD1 = 1;
  2270     03C9  1488               	bsf	8,1	;volatile
  2271                           
  2272                           ;matrix_keypad.c: 101:     RD0 = 0;
  2273     03CA  1008               	bcf	8,0	;volatile
  2274     03CB                     l1406:
  2275                           
  2276                           ;matrix_keypad.c: 103:     for (i = 100; i--; );
  2277     03CB  3064               	movlw	100
  2278     03CC  00C8               	movwf	scan_keypad@i
  2279     03CD  3000               	movlw	0
  2280     03CE  00C9               	movwf	scan_keypad@i+1
  2281     03CF                     l1408:
  2282     03CF  30FF               	movlw	255
  2283     03D0  07C8               	addwf	scan_keypad@i,f
  2284     03D1  1803               	skipnc
  2285     03D2  0AC9               	incf	scan_keypad@i+1,f
  2286     03D3  30FF               	movlw	255
  2287     03D4  07C9               	addwf	scan_keypad@i+1,f
  2288     03D5  0A48               	incf	scan_keypad@i,w
  2289     03D6  1D03               	skipz
  2290     03D7  2BDC               	goto	u931
  2291     03D8  0A49               	incf	scan_keypad@i+1,w
  2292     03D9  1D03               	btfss	3,2
  2293     03DA  2BDC               	goto	u931
  2294     03DB  2BDD               	goto	u930
  2295     03DC                     u931:
  2296     03DC  2BCF               	goto	l1408
  2297     03DD                     u930:
  2298     03DD                     l177:
  2299                           
  2300                           ;matrix_keypad.c: 105:     if (RB0 == 0)
  2301     03DD  1806               	btfsc	6,0	;volatile
  2302     03DE  2BE0               	goto	u941
  2303     03DF  2BE1               	goto	u940
  2304     03E0                     u941:
  2305     03E0  2BE3               	goto	l178
  2306     03E1                     u940:
  2307     03E1                     l1410:
  2308                           
  2309                           ;matrix_keypad.c: 106:     {;matrix_keypad.c: 107:         return '*';
  2310     03E1  302A               	movlw	42
  2311     03E2  2BF0               	goto	l154
  2312     03E3                     l178:	
  2313                           ;matrix_keypad.c: 109:     else if (RB1 == 0)
  2314                           
  2315     03E3  1886               	btfsc	6,1	;volatile
  2316     03E4  2BE6               	goto	u951
  2317     03E5  2BE7               	goto	u950
  2318     03E6                     u951:
  2319     03E6  2BE9               	goto	l180
  2320     03E7                     u950:
  2321     03E7                     l1416:
  2322                           
  2323                           ;matrix_keypad.c: 110:     {;matrix_keypad.c: 111:         return 0;
  2324     03E7  3000               	movlw	0
  2325     03E8  2BF0               	goto	l154
  2326     03E9                     l180:	
  2327                           ;matrix_keypad.c: 113:     else if (RB2 == 0)
  2328                           
  2329     03E9  1906               	btfsc	6,2	;volatile
  2330     03EA  2BEC               	goto	u961
  2331     03EB  2BED               	goto	u960
  2332     03EC                     u961:
  2333     03EC  2BEF               	goto	l1426
  2334     03ED                     u960:
  2335     03ED                     l1422:
  2336                           
  2337                           ;matrix_keypad.c: 114:     {;matrix_keypad.c: 115:         return '#';
  2338     03ED  3023               	movlw	35
  2339     03EE  2BF0               	goto	l154
  2340     03EF                     l1426:
  2341                           
  2342                           ;matrix_keypad.c: 118:     return 0xFF;
  2343     03EF  30FF               	movlw	255
  2344     03F0                     l154:
  2345     03F0  0008               	return
  2346     03F1                     __end_of_scan_keypad:
  2347                           
  2348                           	psect	text3
  2349     0654                     __ptext3:	
  2350 ;; *************** function _init_config *****************
  2351 ;; Defined at:
  2352 ;;		line 35 in file "main.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2366 ;;      Params:         0       0       0       0       0
  2367 ;;      Locals:         0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0
  2369 ;;      Totals:         0       0       0       0       0
  2370 ;;Total ram usage:        0 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 5
  2373 ;; This function calls:
  2374 ;;		_clcd_print
  2375 ;;		_init_clcd
  2376 ;;		_init_matrix_keypad
  2377 ;;		_init_timer0
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383     0654                     _init_config:	
  2384                           ;psect for function _init_config
  2385                           
  2386     0654                     l1450:	
  2387                           ;incstack = 0
  2388                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2389                           
  2390                           
  2391                           ;main.c: 37: 
  2392     0654  178B               	bsf	11,7	;volatile
  2393     0655                     l1452:
  2394                           
  2395                           ;main.c: 38:     while (1) {
  2396     0655  120A  118A  2694  120A  118A  	fcall	_init_clcd
  2397                           
  2398                           ;main.c: 39: 
  2399     065A  120A  118A  2684  120A  118A  	fcall	_init_matrix_keypad
  2400                           
  2401                           ;main.c: 40:         key = read_matrix_keypad(1);
  2402     065F  120A  118A  269F  120A  118A  	fcall	_init_timer0
  2403     0664                     l1454:
  2404                           
  2405                           ;main.c: 41: 
  2406     0664  3080               	movlw	128
  2407     0665  1283               	bcf	3,5	;RP0=0, select bank0
  2408     0666  1303               	bcf	3,6	;RP1=0, select bank0
  2409     0667  00CC               	movwf	clcd_print@addr
  2410     0668  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2411     0669  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  2412     066E                     l30:
  2413     066E  0008               	return
  2414     066F                     __end_of_init_config:
  2415                           
  2416                           	psect	text4
  2417     069F                     __ptext4:	
  2418 ;; *************** function _init_timer0 *****************
  2419 ;; Defined at:
  2420 ;;		line 11 in file "timers.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2434 ;;      Params:         0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 2
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_init_config
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448     069F                     _init_timer0:	
  2449                           ;psect for function _init_timer0
  2450                           
  2451     069F                     l1332:	
  2452                           ;incstack = 0
  2453                           ; Regs used in _init_timer0: [wreg]
  2454                           
  2455                           
  2456                           ;timers.c: 14:     T0CS = 0;
  2457     069F  1683               	bsf	3,5	;RP0=1, select bank1
  2458     06A0  1303               	bcf	3,6	;RP1=0, select bank1
  2459     06A1  1281               	bcf	1,5	;volatile
  2460                           
  2461                           ;timers.c: 17:     PSA = 1;
  2462     06A2  1581               	bsf	1,3	;volatile
  2463     06A3                     l1334:
  2464                           
  2465                           ;timers.c: 19:     TMR0 = 6;
  2466     06A3  3006               	movlw	6
  2467     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2468     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2469     06A6  0081               	movwf	1	;volatile
  2470     06A7                     l201:
  2471     06A7  0008               	return
  2472     06A8                     __end_of_init_timer0:
  2473                           
  2474                           	psect	text5
  2475     0684                     __ptext5:	
  2476 ;; *************** function _init_matrix_keypad *****************
  2477 ;; Defined at:
  2478 ;;		line 14 in file "matrix_keypad.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0
  2495 ;;      Totals:         0       0       0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 2
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_init_config
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506     0684                     _init_matrix_keypad:	
  2507                           ;psect for function _init_matrix_keypad
  2508                           
  2509     0684                     l1320:	
  2510                           ;incstack = 0
  2511                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  2512                           
  2513                           
  2514                           ;matrix_keypad.c: 18:     TRISB = TRISB | 0x07;
  2515     0684  1683               	bsf	3,5	;RP0=1, select bank1
  2516     0685  1303               	bcf	3,6	;RP1=0, select bank1
  2517     0686  0806               	movf	6,w	;volatile
  2518     0687  3807               	iorlw	7
  2519     0688  0086               	movwf	6	;volatile
  2520                           
  2521                           ;matrix_keypad.c: 22:     TRISD = TRISD & 0xF0;
  2522     0689  0808               	movf	8,w	;volatile
  2523     068A  39F0               	andlw	240
  2524     068B  0088               	movwf	8	;volatile
  2525     068C                     l1322:
  2526                           
  2527                           ;matrix_keypad.c: 25:     nRBPU = 0;
  2528     068C  1381               	bcf	1,7	;volatile
  2529     068D                     l1324:
  2530                           
  2531                           ;matrix_keypad.c: 28:     RD3 = 1;
  2532     068D  1283               	bcf	3,5	;RP0=0, select bank0
  2533     068E  1303               	bcf	3,6	;RP1=0, select bank0
  2534     068F  1588               	bsf	8,3	;volatile
  2535     0690                     l1326:
  2536                           
  2537                           ;matrix_keypad.c: 29:     RD2 = 1;
  2538     0690  1508               	bsf	8,2	;volatile
  2539     0691                     l1328:
  2540                           
  2541                           ;matrix_keypad.c: 30:     RD1 = 1;
  2542     0691  1488               	bsf	8,1	;volatile
  2543     0692                     l1330:
  2544                           
  2545                           ;matrix_keypad.c: 31:     RD0 = 1;
  2546     0692  1408               	bsf	8,0	;volatile
  2547     0693                     l147:
  2548     0693  0008               	return
  2549     0694                     __end_of_init_matrix_keypad:
  2550                           
  2551                           	psect	text6
  2552     0694                     __ptext6:	
  2553 ;; *************** function _init_clcd *****************
  2554 ;; Defined at:
  2555 ;;		line 52 in file "clcd.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0
  2572 ;;      Totals:         0       0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used: 1
  2575 ;; Hardware stack levels required when called: 4
  2576 ;; This function calls:
  2577 ;;		_init_display_controller
  2578 ;; This function is called by:
  2579 ;;		_init_config
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583     0694                     _init_clcd:	
  2584                           ;psect for function _init_clcd
  2585                           
  2586     0694                     l1312:	
  2587                           ;incstack = 0
  2588                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  2589                           
  2590                           
  2591                           ;clcd.c: 55:     TRISD = 0x00;
  2592     0694  1683               	bsf	3,5	;RP0=1, select bank1
  2593     0695  1303               	bcf	3,6	;RP1=0, select bank1
  2594     0696  0188               	clrf	8	;volatile
  2595     0697                     l1314:
  2596                           
  2597                           ;clcd.c: 58:     TRISE2 = 0;
  2598     0697  1109               	bcf	9,2	;volatile
  2599     0698                     l1316:
  2600                           
  2601                           ;clcd.c: 59:     TRISE1 = 0;
  2602     0698  1089               	bcf	9,1	;volatile
  2603     0699                     l1318:
  2604                           
  2605                           ;clcd.c: 61:     init_display_controller();
  2606     0699  120A  118A  23F1  120A  118A  	fcall	_init_display_controller
  2607     069E                     l115:
  2608     069E  0008               	return
  2609     069F                     __end_of_init_clcd:
  2610                           
  2611                           	psect	text7
  2612     03F1                     __ptext7:	
  2613 ;; *************** function _init_display_controller *****************
  2614 ;; Defined at:
  2615 ;;		line 29 in file "clcd.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2629 ;;      Params:         0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0
  2631 ;;      Temps:          0       2       0       0       0
  2632 ;;      Totals:         0       2       0       0       0
  2633 ;;Total ram usage:        2 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 3
  2636 ;; This function calls:
  2637 ;;		_clcd_write@clcd$F100
  2638 ;; This function is called by:
  2639 ;;		_init_clcd
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643     03F1                     _init_display_controller:	
  2644                           ;psect for function _init_display_controller
  2645                           
  2646     03F1                     l1288:	
  2647                           ;incstack = 0
  2648                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  2649                           
  2650                           
  2651                           ;clcd.c: 32:     _delay((unsigned long)((30)*(20000000/4000.0)));
  2652     03F1  30C3               	movlw	195
  2653     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2654     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2655     03F4  00CD               	movwf	??_init_display_controller+1
  2656     03F5  30CC               	movlw	204
  2657     03F6  00CC               	movwf	??_init_display_controller
  2658     03F7                     u1537:
  2659     03F7  0BCC               	decfsz	??_init_display_controller,f
  2660     03F8  2BF7               	goto	u1537
  2661     03F9  0BCD               	decfsz	??_init_display_controller+1,f
  2662     03FA  2BF7               	goto	u1537
  2663     03FB  0000               	nop
  2664     03FC                     l1290:
  2665                           
  2666                           ;clcd.c: 35:     clcd_write(0x33, 0);
  2667     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2668     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2669     03FE  01C8               	clrf	clcd_write@clcd$F100@mode
  2670     03FF  3033               	movlw	51
  2671     0400  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  2672     0405                     l1292:
  2673                           
  2674                           ;clcd.c: 36:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2675     0405  301B               	movlw	27
  2676     0406  1283               	bcf	3,5	;RP0=0, select bank0
  2677     0407  1303               	bcf	3,6	;RP1=0, select bank0
  2678     0408  00CD               	movwf	??_init_display_controller+1
  2679     0409  309D               	movlw	157
  2680     040A  00CC               	movwf	??_init_display_controller
  2681     040B                     u1547:
  2682     040B  0BCC               	decfsz	??_init_display_controller,f
  2683     040C  2C0B               	goto	u1547
  2684     040D  0BCD               	decfsz	??_init_display_controller+1,f
  2685     040E  2C0B               	goto	u1547
  2686     040F  2C10               	nop2
  2687                           
  2688                           ;clcd.c: 37:     clcd_write(0x33, 0);
  2689     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2690     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2691     0412  01C8               	clrf	clcd_write@clcd$F100@mode
  2692     0413  3033               	movlw	51
  2693     0414  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  2694     0419                     l1294:
  2695                           
  2696                           ;clcd.c: 38:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2697     0419  30A5               	movlw	165
  2698     041A  1283               	bcf	3,5	;RP0=0, select bank0
  2699     041B  1303               	bcf	3,6	;RP1=0, select bank0
  2700     041C  00CC               	movwf	??_init_display_controller
  2701     041D                     u1557:
  2702     041D  0BCC               	decfsz	??_init_display_controller,f
  2703     041E  2C1D               	goto	u1557
  2704     041F  2C20               	nop2
  2705     0420                     l1296:
  2706                           
  2707                           ;clcd.c: 39:     clcd_write(0x33, 0);
  2708     0420  1283               	bcf	3,5	;RP0=0, select bank0
  2709     0421  1303               	bcf	3,6	;RP1=0, select bank0
  2710     0422  01C8               	clrf	clcd_write@clcd$F100@mode
  2711     0423  3033               	movlw	51
  2712     0424  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  2713     0429                     l1298:
  2714                           
  2715                           ;clcd.c: 40:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  2716     0429  2C2A               	nop2	;2 cycle nop
  2717     042A  2C2B               	nop2	;2 cycle nop
  2718     042B  0000               	nop
  2719     042C                     l1300:
  2720                           
  2721                           ;clcd.c: 42:     clcd_write(0x02, 0);
  2722     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2723     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2724     042E  01C8               	clrf	clcd_write@clcd$F100@mode
  2725     042F  3002               	movlw	2
  2726     0430  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  2727     0435                     l1302:
  2728                           
  2729                           ;clcd.c: 43:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2730     0435  30A5               	movlw	165
  2731     0436  1283               	bcf	3,5	;RP0=0, select bank0
  2732     0437  1303               	bcf	3,6	;RP1=0, select bank0
  2733     0438  00CC               	movwf	??_init_display_controller
  2734     0439                     u1567:
  2735     0439  0BCC               	decfsz	??_init_display_controller,f
  2736     043A  2C39               	goto	u1567
  2737     043B  2C3C               	nop2
  2738                           
  2739                           ;clcd.c: 44:     clcd_write(0x28, 0);
  2740     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2741     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2742     043E  01C8               	clrf	clcd_write@clcd$F100@mode
  2743     043F  3028               	movlw	40
  2744     0440  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  2745     0445                     l1304:
  2746                           
  2747                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2748     0445  30A5               	movlw	165
  2749     0446  1283               	bcf	3,5	;RP0=0, select bank0
  2750     0447  1303               	bcf	3,6	;RP1=0, select bank0
  2751     0448  00CC               	movwf	??_init_display_controller
  2752     0449                     u1577:
  2753     0449  0BCC               	decfsz	??_init_display_controller,f
  2754     044A  2C49               	goto	u1577
  2755     044B  2C4C               	nop2
  2756     044C                     l1306:
  2757                           
  2758                           ;clcd.c: 46:     clcd_write(0x01, 0);
  2759     044C  1283               	bcf	3,5	;RP0=0, select bank0
  2760     044D  1303               	bcf	3,6	;RP1=0, select bank0
  2761     044E  01C8               	clrf	clcd_write@clcd$F100@mode
  2762     044F  3001               	movlw	1
  2763     0450  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  2764                           
  2765                           ;clcd.c: 47:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2766     0455  3004               	movlw	4
  2767     0456  1283               	bcf	3,5	;RP0=0, select bank0
  2768     0457  1303               	bcf	3,6	;RP1=0, select bank0
  2769     0458  00CD               	movwf	??_init_display_controller+1
  2770     0459  303D               	movlw	61
  2771     045A  00CC               	movwf	??_init_display_controller
  2772     045B                     u1587:
  2773     045B  0BCC               	decfsz	??_init_display_controller,f
  2774     045C  2C5B               	goto	u1587
  2775     045D  0BCD               	decfsz	??_init_display_controller+1,f
  2776     045E  2C5B               	goto	u1587
  2777     045F                     l1308:
  2778                           
  2779                           ;clcd.c: 48:     clcd_write(0x0C, 0);
  2780     045F  1283               	bcf	3,5	;RP0=0, select bank0
  2781     0460  1303               	bcf	3,6	;RP1=0, select bank0
  2782     0461  01C8               	clrf	clcd_write@clcd$F100@mode
  2783     0462  300C               	movlw	12
  2784     0463  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  2785     0468                     l1310:
  2786                           
  2787                           ;clcd.c: 49:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2788     0468  30A5               	movlw	165
  2789     0469  1283               	bcf	3,5	;RP0=0, select bank0
  2790     046A  1303               	bcf	3,6	;RP1=0, select bank0
  2791     046B  00CC               	movwf	??_init_display_controller
  2792     046C                     u1597:
  2793     046C  0BCC               	decfsz	??_init_display_controller,f
  2794     046D  2C6C               	goto	u1597
  2795     046E  2C6F               	nop2
  2796     046F                     l112:
  2797     046F  0008               	return
  2798     0470                     __end_of_init_display_controller:
  2799                           
  2800                           	psect	text8
  2801     05FF                     __ptext8:	
  2802 ;; *************** function _clcd_print *****************
  2803 ;; Defined at:
  2804 ;;		line 70 in file "clcd.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  str             1    wreg     PTR const unsigned char 
  2807 ;;		 -> STR_5(5), STR_4(17), STR_3(17), STR_2(17), 
  2808 ;;		 -> STR_1(17), 
  2809 ;;  addr            1    4[BANK0 ] unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  str             1    5[BANK0 ] PTR const unsigned char 
  2812 ;;		 -> STR_5(5), STR_4(17), STR_3(17), STR_2(17), 
  2813 ;;		 -> STR_1(17), 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       1       0       0       0
  2824 ;;      Locals:         0       1       0       0       0
  2825 ;;      Temps:          0       0       0       0       0
  2826 ;;      Totals:         0       2       0       0       0
  2827 ;;Total ram usage:        2 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 3
  2830 ;; This function calls:
  2831 ;;		_clcd_write@clcd$F100
  2832 ;; This function is called by:
  2833 ;;		_init_config
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838     05FF                     _clcd_print:	
  2839                           ;psect for function _clcd_print
  2840                           
  2841                           
  2842                           ;incstack = 0
  2843                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2844                           ;clcd_print@str stored from wreg
  2845     05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2846     0600  1303               	bcf	3,6	;RP1=0, select bank0
  2847     0601  00CD               	movwf	clcd_print@str
  2848     0602                     l1336:
  2849                           
  2850                           ;clcd.c: 70: void clcd_print(const char *str, unsigned char addr);clcd.c: 71: {;clcd.c: 
      +                          72:     clcd_write(addr, 0);
  2851     0602  01C8               	clrf	clcd_write@clcd$F100@mode
  2852     0603  084C               	movf	clcd_print@addr,w
  2853     0604  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  2854                           
  2855                           ;clcd.c: 74:     while (*str != '\0')
  2856     0609  2E1E               	goto	l1342
  2857     060A                     l1338:
  2858                           
  2859                           ;clcd.c: 75:     {;clcd.c: 76:         clcd_write(*str, 1);
  2860     060A  01C8               	clrf	clcd_write@clcd$F100@mode
  2861     060B  0AC8               	incf	clcd_write@clcd$F100@mode,f
  2862     060C  084D               	movf	clcd_print@str,w
  2863     060D  0084               	movwf	4
  2864     060E  120A  118A  2500  120A  118A  	fcall	stringdir
  2865     0613  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  2866     0618                     l1340:
  2867                           
  2868                           ;clcd.c: 77:         str++;
  2869     0618  3001               	movlw	1
  2870     0619  00FF               	movwf	btemp+1
  2871     061A  087F               	movf	btemp+1,w
  2872     061B  1283               	bcf	3,5	;RP0=0, select bank0
  2873     061C  1303               	bcf	3,6	;RP1=0, select bank0
  2874     061D  07CD               	addwf	clcd_print@str,f
  2875     061E                     l1342:
  2876                           
  2877                           ;clcd.c: 74:     while (*str != '\0')
  2878     061E  1283               	bcf	3,5	;RP0=0, select bank0
  2879     061F  1303               	bcf	3,6	;RP1=0, select bank0
  2880     0620  084D               	movf	clcd_print@str,w
  2881     0621  0084               	movwf	4
  2882     0622  120A  118A  2500  120A  118A  	fcall	stringdir
  2883     0627  3A00               	xorlw	0
  2884     0628  1D03               	skipz
  2885     0629  2E2B               	goto	u801
  2886     062A  2E2C               	goto	u800
  2887     062B                     u801:
  2888     062B  2E0A               	goto	l1338
  2889     062C                     u800:
  2890     062C                     l124:
  2891     062C  0008               	return
  2892     062D                     __end_of_clcd_print:
  2893                           
  2894                           	psect	text9
  2895     054F                     __ptext9:	
  2896 ;; *************** function _clcd_write *****************
  2897 ;; Defined at:
  2898 ;;		line 18 in file "main.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  byte            1    wreg     unsigned char 
  2901 ;;  mode            1    0[BANK0 ] unsigned char 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  byte            1    3[BANK0 ] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         0       1       0       0       0
  2914 ;;      Locals:         0       1       0       0       0
  2915 ;;      Temps:          0       2       0       0       0
  2916 ;;      Totals:         0       4       0       0       0
  2917 ;;Total ram usage:        4 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 2
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927     054F                     _clcd_write:	
  2928                           ;psect for function _clcd_write
  2929                           
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  2933                           ;clcd_write@byte stored from wreg
  2934     054F  1283               	bcf	3,5	;RP0=0, select bank0
  2935     0550  1303               	bcf	3,6	;RP1=0, select bank0
  2936     0551  00CB               	movwf	clcd_write@byte
  2937     0552                     l1430:
  2938                           
  2939                           ;main.c: 18: ;main.c: 19: static void init_config(void) {;main.c: 20: 
  2940     0552  1848               	btfsc	clcd_write@mode,0
  2941     0553  2D55               	goto	u971
  2942     0554  2D59               	goto	u970
  2943     0555                     u971:
  2944     0555  1283               	bcf	3,5	;RP0=0, select bank0
  2945     0556  1303               	bcf	3,6	;RP1=0, select bank0
  2946     0557  1509               	bsf	9,2	;volatile
  2947     0558  2D5C               	goto	u984
  2948     0559                     u970:
  2949     0559  1283               	bcf	3,5	;RP0=0, select bank0
  2950     055A  1303               	bcf	3,6	;RP1=0, select bank0
  2951     055B  1109               	bcf	9,2	;volatile
  2952     055C                     u984:
  2953     055C                     l1432:
  2954                           
  2955                           ;main.c: 22:     init_clcd();
  2956     055C  084B               	movf	clcd_write@byte,w
  2957     055D  39F0               	andlw	240
  2958     055E  0088               	movwf	8	;volatile
  2959     055F                     l1434:
  2960                           
  2961                           ;main.c: 23:     init_matrix_keypad();
  2962     055F  1489               	bsf	9,1	;volatile
  2963     0560                     l1436:
  2964                           
  2965                           ;main.c: 24:     init_timer0();
  2966     0560  30A5               	movlw	165
  2967     0561  1283               	bcf	3,5	;RP0=0, select bank0
  2968     0562  1303               	bcf	3,6	;RP1=0, select bank0
  2969     0563  00C9               	movwf	??_clcd_write
  2970     0564                     u1607:
  2971     0564  0BC9               	decfsz	??_clcd_write,f
  2972     0565  2D64               	goto	u1607
  2973     0566  2D67               	nop2
  2974     0567                     l1438:
  2975                           
  2976                           ;main.c: 25:     clcd_print("enter the number", (0x80 + 0));
  2977     0567  1283               	bcf	3,5	;RP0=0, select bank0
  2978     0568  1303               	bcf	3,6	;RP1=0, select bank0
  2979     0569  1089               	bcf	9,1	;volatile
  2980     056A                     l1440:
  2981                           
  2982                           ;main.c: 27: }
  2983     056A  084B               	movf	clcd_write@byte,w
  2984     056B  390F               	andlw	15
  2985     056C  00C9               	movwf	??_clcd_write
  2986     056D  3003               	movlw	3
  2987     056E                     u995:
  2988     056E  1003               	clrc
  2989     056F  0DC9               	rlf	??_clcd_write,f
  2990     0570  3EFF               	addlw	-1
  2991     0571  1D03               	skipz
  2992     0572  2D6E               	goto	u995
  2993     0573  1003               	clrc
  2994     0574  0D49               	rlf	??_clcd_write,w
  2995     0575  0088               	movwf	8	;volatile
  2996     0576                     l1442:
  2997                           
  2998                           ;main.c: 28: 
  2999     0576  1489               	bsf	9,1	;volatile
  3000     0577                     l1444:
  3001                           
  3002                           ;main.c: 29: void main(void) {
  3003     0577  30A5               	movlw	165
  3004     0578  1283               	bcf	3,5	;RP0=0, select bank0
  3005     0579  1303               	bcf	3,6	;RP1=0, select bank0
  3006     057A  00C9               	movwf	??_clcd_write
  3007     057B                     u1617:
  3008     057B  0BC9               	decfsz	??_clcd_write,f
  3009     057C  2D7B               	goto	u1617
  3010     057D  2D7E               	nop2
  3011     057E                     l1446:
  3012                           
  3013                           ;main.c: 30:     unsigned char key, cur_key;
  3014     057E  1283               	bcf	3,5	;RP0=0, select bank0
  3015     057F  1303               	bcf	3,6	;RP1=0, select bank0
  3016     0580  1089               	bcf	9,1	;volatile
  3017     0581                     l1448:
  3018                           
  3019                           ;main.c: 32:     static int edit_key = 0, flag1 = 0,count_letter = 0, flag2 = 1,count,te
      +                          mp, pos = 0, char_pos;
  3020     0581  301B               	movlw	27
  3021     0582  1283               	bcf	3,5	;RP0=0, select bank0
  3022     0583  1303               	bcf	3,6	;RP1=0, select bank0
  3023     0584  00CA               	movwf	??_clcd_write+1
  3024     0585  309D               	movlw	157
  3025     0586  00C9               	movwf	??_clcd_write
  3026     0587                     u1627:
  3027     0587  0BC9               	decfsz	??_clcd_write,f
  3028     0588  2D87               	goto	u1627
  3029     0589  0BCA               	decfsz	??_clcd_write+1,f
  3030     058A  2D87               	goto	u1627
  3031     058B  2D8C               	nop2
  3032     058C                     l27:
  3033     058C  0008               	return
  3034     058D                     __end_of_clcd_write:
  3035                           
  3036                           	psect	text10
  3037     066F                     __ptext10:	
  3038 ;; *************** function _clcd_putch *****************
  3039 ;; Defined at:
  3040 ;;		line 64 in file "clcd.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  data            1    wreg     const unsigned char 
  3043 ;;  addr            1    4[BANK0 ] unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  data            1    5[BANK0 ] const unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, pclath, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       1       0       0       0
  3056 ;;      Locals:         0       1       0       0       0
  3057 ;;      Temps:          0       0       0       0       0
  3058 ;;      Totals:         0       2       0       0       0
  3059 ;;Total ram usage:        2 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 3
  3062 ;; This function calls:
  3063 ;;		_clcd_write@clcd$F100
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069     066F                     _clcd_putch:	
  3070                           ;psect for function _clcd_putch
  3071                           
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  3075                           ;clcd_putch@data stored from wreg
  3076     066F  1283               	bcf	3,5	;RP0=0, select bank0
  3077     0670  1303               	bcf	3,6	;RP1=0, select bank0
  3078     0671  00CD               	movwf	clcd_putch@data
  3079     0672                     l1486:
  3080                           
  3081                           ;clcd.c: 64: void clcd_putch(const char data, unsigned char addr);clcd.c: 65: {;clcd.c: 
      +                          66:     clcd_write(addr, 0);
  3082     0672  01C8               	clrf	clcd_write@clcd$F100@mode
  3083     0673  084C               	movf	clcd_putch@addr,w
  3084     0674  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  3085                           
  3086                           ;clcd.c: 67:     clcd_write(data, 1);
  3087     0679  1283               	bcf	3,5	;RP0=0, select bank0
  3088     067A  1303               	bcf	3,6	;RP1=0, select bank0
  3089     067B  01C8               	clrf	clcd_write@clcd$F100@mode
  3090     067C  0AC8               	incf	clcd_write@clcd$F100@mode,f
  3091     067D  084D               	movf	clcd_putch@data,w
  3092     067E  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F100
  3093     0683                     l118:
  3094     0683  0008               	return
  3095     0684                     __end_of_clcd_putch:
  3096                           
  3097                           	psect	text11
  3098     058D                     __ptext11:	
  3099 ;; *************** function _clcd_write@clcd$F100 *****************
  3100 ;; Defined at:
  3101 ;;		line 12 in file "clcd.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  byte            1    wreg     unsigned char 
  3104 ;;  mode            1    0[BANK0 ] unsigned char 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  byte            1    3[BANK0 ] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3116 ;;      Params:         0       1       0       0       0
  3117 ;;      Locals:         0       1       0       0       0
  3118 ;;      Temps:          0       2       0       0       0
  3119 ;;      Totals:         0       4       0       0       0
  3120 ;;Total ram usage:        4 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 2
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_init_display_controller
  3127 ;;		_clcd_putch
  3128 ;;		_clcd_print
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132     058D                     _clcd_write@clcd$F100:	
  3133                           ;psect for function _clcd_write@clcd$F100
  3134                           
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in _clcd_write@clcd$F100: [wreg+status,2+status,0]
  3138                           ;clcd_write@clcd$F100@byte stored from wreg
  3139     058D  1283               	bcf	3,5	;RP0=0, select bank0
  3140     058E  1303               	bcf	3,6	;RP1=0, select bank0
  3141     058F  00CB               	movwf	clcd_write@clcd$F100@byte
  3142     0590                     l1268:
  3143                           
  3144                           ;clcd.c: 12: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 13: 
      +                          {;clcd.c: 14:     RE2 = mode;
  3145     0590  1848               	btfsc	clcd_write@clcd$F100@mode,0
  3146     0591  2D93               	goto	u771
  3147     0592  2D97               	goto	u770
  3148     0593                     u771:
  3149     0593  1283               	bcf	3,5	;RP0=0, select bank0
  3150     0594  1303               	bcf	3,6	;RP1=0, select bank0
  3151     0595  1509               	bsf	9,2	;volatile
  3152     0596  2D9A               	goto	u784
  3153     0597                     u770:
  3154     0597  1283               	bcf	3,5	;RP0=0, select bank0
  3155     0598  1303               	bcf	3,6	;RP1=0, select bank0
  3156     0599  1109               	bcf	9,2	;volatile
  3157     059A                     u784:
  3158     059A                     l1270:
  3159                           
  3160                           ;clcd.c: 16:     PORTD = byte & 0xF0;
  3161     059A  084B               	movf	clcd_write@clcd$F100@byte,w
  3162     059B  39F0               	andlw	240
  3163     059C  0088               	movwf	8	;volatile
  3164     059D                     l1272:
  3165                           
  3166                           ;clcd.c: 17:     RE1 = 1;
  3167     059D  1489               	bsf	9,1	;volatile
  3168     059E                     l1274:
  3169                           
  3170                           ;clcd.c: 18:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3171     059E  30A5               	movlw	165
  3172     059F  1283               	bcf	3,5	;RP0=0, select bank0
  3173     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  3174     05A1  00C9               	movwf	??_clcd_write@clcd$F100
  3175     05A2                     u1637:
  3176     05A2  0BC9               	decfsz	??_clcd_write@clcd$F100,f
  3177     05A3  2DA2               	goto	u1637
  3178     05A4  2DA5               	nop2
  3179     05A5                     l1276:
  3180                           
  3181                           ;clcd.c: 19:     RE1 = 0;
  3182     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3183     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  3184     05A7  1089               	bcf	9,1	;volatile
  3185     05A8                     l1278:
  3186                           
  3187                           ;clcd.c: 21:     PORTD = (byte & 0x0F) << 4;
  3188     05A8  084B               	movf	clcd_write@clcd$F100@byte,w
  3189     05A9  390F               	andlw	15
  3190     05AA  00C9               	movwf	??_clcd_write@clcd$F100
  3191     05AB  3003               	movlw	3
  3192     05AC                     u795:
  3193     05AC  1003               	clrc
  3194     05AD  0DC9               	rlf	??_clcd_write@clcd$F100,f
  3195     05AE  3EFF               	addlw	-1
  3196     05AF  1D03               	skipz
  3197     05B0  2DAC               	goto	u795
  3198     05B1  1003               	clrc
  3199     05B2  0D49               	rlf	??_clcd_write@clcd$F100,w
  3200     05B3  0088               	movwf	8	;volatile
  3201     05B4                     l1280:
  3202                           
  3203                           ;clcd.c: 22:     RE1 = 1;
  3204     05B4  1489               	bsf	9,1	;volatile
  3205     05B5                     l1282:
  3206                           
  3207                           ;clcd.c: 23:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3208     05B5  30A5               	movlw	165
  3209     05B6  1283               	bcf	3,5	;RP0=0, select bank0
  3210     05B7  1303               	bcf	3,6	;RP1=0, select bank0
  3211     05B8  00C9               	movwf	??_clcd_write@clcd$F100
  3212     05B9                     u1647:
  3213     05B9  0BC9               	decfsz	??_clcd_write@clcd$F100,f
  3214     05BA  2DB9               	goto	u1647
  3215     05BB  2DBC               	nop2
  3216     05BC                     l1284:
  3217                           
  3218                           ;clcd.c: 24:     RE1 = 0;
  3219     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3220     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3221     05BE  1089               	bcf	9,1	;volatile
  3222     05BF                     l1286:
  3223                           
  3224                           ;clcd.c: 26:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3225     05BF  301B               	movlw	27
  3226     05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3227     05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3228     05C2  00CA               	movwf	??_clcd_write@clcd$F100+1
  3229     05C3  309D               	movlw	157
  3230     05C4  00C9               	movwf	??_clcd_write@clcd$F100
  3231     05C5                     u1657:
  3232     05C5  0BC9               	decfsz	??_clcd_write@clcd$F100,f
  3233     05C6  2DC5               	goto	u1657
  3234     05C7  0BCA               	decfsz	??_clcd_write@clcd$F100+1,f
  3235     05C8  2DC5               	goto	u1657
  3236     05C9  2DCA               	nop2
  3237     05CA                     l109:
  3238     05CA  0008               	return
  3239     05CB                     __end_of_clcd_write@clcd$F100:
  3240                           
  3241                           	psect	text12
  3242     05CB                     __ptext12:	
  3243 ;; *************** function _isr *****************
  3244 ;; Defined at:
  3245 ;;		line 12 in file "isr.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3259 ;;      Params:         0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0
  3261 ;;      Temps:          3       0       0       0       0
  3262 ;;      Totals:         3       0       0       0       0
  3263 ;;Total ram usage:        3 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; Hardware stack levels required when called: 1
  3266 ;; This function calls:
  3267 ;;		___awdiv
  3268 ;; This function is called by:
  3269 ;;		Interrupt level 1
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273     05CB                     _isr:	
  3274                           ;psect for function _isr
  3275                           
  3276     05CB                     i1l1718:
  3277                           
  3278                           ;isr.c: 14:     static unsigned int count = 0;;isr.c: 16:     if (TMR0IF == 1)
  3279     05CB  1D0B               	btfss	11,2	;volatile
  3280     05CC  2DCE               	goto	u151_21
  3281     05CD  2DCF               	goto	u151_20
  3282     05CE                     u151_21:
  3283     05CE  2DF6               	goto	i1l216
  3284     05CF                     u151_20:
  3285     05CF                     i1l1720:
  3286                           
  3287                           ;isr.c: 17:     {;isr.c: 19:         TMR0 = TMR0 + 6 + 2;
  3288     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3289     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3290     05D1  0801               	movf	1,w	;volatile
  3291     05D2  3E08               	addlw	8
  3292     05D3  0081               	movwf	1	;volatile
  3293     05D4                     i1l1722:
  3294                           
  3295                           ;isr.c: 21:         if (++count == (20000/sigma))
  3296     05D4  087C               	movf	_sigma+1,w
  3297     05D5  00F1               	movwf	___awdiv@divisor+1
  3298     05D6  087B               	movf	_sigma,w
  3299     05D7  00F0               	movwf	___awdiv@divisor
  3300     05D8  3020               	movlw	32
  3301     05D9  00F2               	movwf	___awdiv@dividend
  3302     05DA  304E               	movlw	78
  3303     05DB  00F3               	movwf	___awdiv@dividend+1
  3304     05DC  120A  118A  2470  120A  118A  	fcall	___awdiv
  3305     05E1  3001               	movlw	1
  3306     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3307     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3308     05E4  07B8               	addwf	isr@count,f
  3309     05E5  1803               	skipnc
  3310     05E6  0AB9               	incf	isr@count+1,f
  3311     05E7  3000               	movlw	0
  3312     05E8  07B9               	addwf	isr@count+1,f
  3313     05E9  0871               	movf	?___awdiv+1,w
  3314     05EA  0639               	xorwf	isr@count+1,w
  3315     05EB  1D03               	skipz
  3316     05EC  2DEF               	goto	u152_25
  3317     05ED  0870               	movf	?___awdiv,w
  3318     05EE  0638               	xorwf	isr@count,w
  3319     05EF                     u152_25:
  3320     05EF  1D03               	skipz
  3321     05F0  2DF2               	goto	u152_21
  3322     05F1  2DF3               	goto	u152_20
  3323     05F2                     u152_21:
  3324     05F2  2DF5               	goto	i1l1726
  3325     05F3                     u152_20:
  3326     05F3                     i1l1724:
  3327                           
  3328                           ;isr.c: 22:         {;isr.c: 23:             count = 0;
  3329     05F3  01B8               	clrf	isr@count
  3330     05F4  01B9               	clrf	isr@count+1
  3331     05F5                     i1l1726:
  3332                           
  3333                           ;isr.c: 25:         TMR0IF = 0;
  3334     05F5  110B               	bcf	11,2	;volatile
  3335     05F6                     i1l216:
  3336     05F6  087A               	movf	??_isr+2,w
  3337     05F7  00FF               	movwf	btemp+1
  3338     05F8  0879               	movf	??_isr+1,w
  3339     05F9  008A               	movwf	10
  3340     05FA  0E78               	swapf	??_isr,w
  3341     05FB  0083               	movwf	3
  3342     05FC  0EFE               	swapf	btemp,f
  3343     05FD  0E7E               	swapf	btemp,w
  3344     05FE  0009               	retfie
  3345     05FF                     __end_of_isr:
  3346                           
  3347                           	psect	intentry
  3348     0004                     __pintentry:	
  3349                           ;incstack = 0
  3350                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3351                           
  3352     0004                     interrupt_function:
  3353     007E                     saved_w	set	btemp
  3354     0004  00FE               	movwf	btemp
  3355     0005  0E03               	swapf	3,w
  3356     0006  00F8               	movwf	??_isr
  3357     0007  080A               	movf	10,w
  3358     0008  00F9               	movwf	??_isr+1
  3359     0009  087F               	movf	btemp+1,w
  3360     000A  00FA               	movwf	??_isr+2
  3361     000B  120A  118A  2DCB   	ljmp	_isr
  3362                           
  3363                           	psect	text13
  3364     0470                     __ptext13:	
  3365 ;; *************** function ___awdiv *****************
  3366 ;; Defined at:
  3367 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  divisor         2    0[COMMON] int 
  3370 ;;  dividend        2    2[COMMON] int 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  quotient        2    6[COMMON] int 
  3373 ;;  sign            1    5[COMMON] unsigned char 
  3374 ;;  counter         1    4[COMMON] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2    0[COMMON] int 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, btemp+1
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         4       0       0       0       0
  3385 ;;      Locals:         4       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0
  3387 ;;      Totals:         8       0       0       0       0
  3388 ;;Total ram usage:        8 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_isr
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397     0470                     ___awdiv:	
  3398                           ;psect for function ___awdiv
  3399                           
  3400     0470                     i1l1488:	
  3401                           ;incstack = 0
  3402                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3403                           
  3404     0470  01F5               	clrf	___awdiv@sign
  3405     0471                     i1l1490:
  3406     0471  1FF1               	btfss	___awdiv@divisor+1,7
  3407     0472  2C74               	goto	u104_21
  3408     0473  2C75               	goto	u104_20
  3409     0474                     u104_21:
  3410     0474  2C7C               	goto	i1l1496
  3411     0475                     u104_20:
  3412     0475                     i1l1492:
  3413     0475  09F0               	comf	___awdiv@divisor,f
  3414     0476  09F1               	comf	___awdiv@divisor+1,f
  3415     0477  0AF0               	incf	___awdiv@divisor,f
  3416     0478  1903               	skipnz
  3417     0479  0AF1               	incf	___awdiv@divisor+1,f
  3418     047A                     i1l1494:
  3419     047A  01F5               	clrf	___awdiv@sign
  3420     047B  0AF5               	incf	___awdiv@sign,f
  3421     047C                     i1l1496:
  3422     047C  1FF3               	btfss	___awdiv@dividend+1,7
  3423     047D  2C7F               	goto	u105_21
  3424     047E  2C80               	goto	u105_20
  3425     047F                     u105_21:
  3426     047F  2C89               	goto	i1l1502
  3427     0480                     u105_20:
  3428     0480                     i1l1498:
  3429     0480  09F2               	comf	___awdiv@dividend,f
  3430     0481  09F3               	comf	___awdiv@dividend+1,f
  3431     0482  0AF2               	incf	___awdiv@dividend,f
  3432     0483  1903               	skipnz
  3433     0484  0AF3               	incf	___awdiv@dividend+1,f
  3434     0485                     i1l1500:
  3435     0485  3001               	movlw	1
  3436     0486  00FF               	movwf	btemp+1
  3437     0487  087F               	movf	btemp+1,w
  3438     0488  06F5               	xorwf	___awdiv@sign,f
  3439     0489                     i1l1502:
  3440     0489  01F6               	clrf	___awdiv@quotient
  3441     048A  01F7               	clrf	___awdiv@quotient+1
  3442     048B                     i1l1504:
  3443     048B  0870               	movf	___awdiv@divisor,w
  3444     048C  0471               	iorwf	___awdiv@divisor+1,w
  3445     048D  1903               	btfsc	3,2
  3446     048E  2C90               	goto	u106_21
  3447     048F  2C91               	goto	u106_20
  3448     0490                     u106_21:
  3449     0490  2CC8               	goto	i1l1524
  3450     0491                     u106_20:
  3451     0491                     i1l1506:
  3452     0491  01F4               	clrf	___awdiv@counter
  3453     0492  0AF4               	incf	___awdiv@counter,f
  3454     0493  2C9F               	goto	i1l1512
  3455     0494                     i1l1508:
  3456     0494  3001               	movlw	1
  3457     0495                     u107_25:
  3458     0495  1003               	clrc
  3459     0496  0DF0               	rlf	___awdiv@divisor,f
  3460     0497  0DF1               	rlf	___awdiv@divisor+1,f
  3461     0498  3EFF               	addlw	-1
  3462     0499  1D03               	skipz
  3463     049A  2C95               	goto	u107_25
  3464     049B                     i1l1510:
  3465     049B  3001               	movlw	1
  3466     049C  00FF               	movwf	btemp+1
  3467     049D  087F               	movf	btemp+1,w
  3468     049E  07F4               	addwf	___awdiv@counter,f
  3469     049F                     i1l1512:
  3470     049F  1FF1               	btfss	___awdiv@divisor+1,7
  3471     04A0  2CA2               	goto	u108_21
  3472     04A1  2CA3               	goto	u108_20
  3473     04A2                     u108_21:
  3474     04A2  2C94               	goto	i1l1508
  3475     04A3                     u108_20:
  3476     04A3                     i1l1514:
  3477     04A3  3001               	movlw	1
  3478     04A4                     u109_25:
  3479     04A4  1003               	clrc
  3480     04A5  0DF6               	rlf	___awdiv@quotient,f
  3481     04A6  0DF7               	rlf	___awdiv@quotient+1,f
  3482     04A7  3EFF               	addlw	-1
  3483     04A8  1D03               	skipz
  3484     04A9  2CA4               	goto	u109_25
  3485     04AA  0871               	movf	___awdiv@divisor+1,w
  3486     04AB  0273               	subwf	___awdiv@dividend+1,w
  3487     04AC  1D03               	skipz
  3488     04AD  2CB0               	goto	u110_25
  3489     04AE  0870               	movf	___awdiv@divisor,w
  3490     04AF  0272               	subwf	___awdiv@dividend,w
  3491     04B0                     u110_25:
  3492     04B0  1C03               	skipc
  3493     04B1  2CB3               	goto	u110_21
  3494     04B2  2CB4               	goto	u110_20
  3495     04B3                     u110_21:
  3496     04B3  2CBB               	goto	i1l1520
  3497     04B4                     u110_20:
  3498     04B4                     i1l1516:
  3499     04B4  0870               	movf	___awdiv@divisor,w
  3500     04B5  02F2               	subwf	___awdiv@dividend,f
  3501     04B6  0871               	movf	___awdiv@divisor+1,w
  3502     04B7  1C03               	skipc
  3503     04B8  03F3               	decf	___awdiv@dividend+1,f
  3504     04B9  02F3               	subwf	___awdiv@dividend+1,f
  3505     04BA                     i1l1518:
  3506     04BA  1476               	bsf	___awdiv@quotient,0
  3507     04BB                     i1l1520:
  3508     04BB  3001               	movlw	1
  3509     04BC                     u111_25:
  3510     04BC  1003               	clrc
  3511     04BD  0CF1               	rrf	___awdiv@divisor+1,f
  3512     04BE  0CF0               	rrf	___awdiv@divisor,f
  3513     04BF  3EFF               	addlw	-1
  3514     04C0  1D03               	skipz
  3515     04C1  2CBC               	goto	u111_25
  3516     04C2                     i1l1522:
  3517     04C2  3001               	movlw	1
  3518     04C3  02F4               	subwf	___awdiv@counter,f
  3519     04C4  1D03               	btfss	3,2
  3520     04C5  2CC7               	goto	u112_21
  3521     04C6  2CC8               	goto	u112_20
  3522     04C7                     u112_21:
  3523     04C7  2CA3               	goto	i1l1514
  3524     04C8                     u112_20:
  3525     04C8                     i1l1524:
  3526     04C8  0875               	movf	___awdiv@sign,w
  3527     04C9  1903               	btfsc	3,2
  3528     04CA  2CCC               	goto	u113_21
  3529     04CB  2CCD               	goto	u113_20
  3530     04CC                     u113_21:
  3531     04CC  2CD2               	goto	i1l1528
  3532     04CD                     u113_20:
  3533     04CD                     i1l1526:
  3534     04CD  09F6               	comf	___awdiv@quotient,f
  3535     04CE  09F7               	comf	___awdiv@quotient+1,f
  3536     04CF  0AF6               	incf	___awdiv@quotient,f
  3537     04D0  1903               	skipnz
  3538     04D1  0AF7               	incf	___awdiv@quotient+1,f
  3539     04D2                     i1l1528:
  3540     04D2  0877               	movf	___awdiv@quotient+1,w
  3541     04D3  00F1               	movwf	?___awdiv+1
  3542     04D4  0876               	movf	___awdiv@quotient,w
  3543     04D5  00F0               	movwf	?___awdiv
  3544     04D6                     i1l455:
  3545     04D6  0008               	return
  3546     04D7                     __end_of___awdiv:
  3547     007E                     btemp	set	126	;btemp
  3548     007E                     wtemp0	set	126
  3549                           
  3550                           	psect	config
  3551                           
  3552                           ;Config register CONFIG @ 0x2007
  3553                           ;	Oscillator Selection bits
  3554                           ;	FOSC = 0x3, unprogrammed default
  3555                           ;	Watchdog Timer Enable bit
  3556                           ;	WDTE = OFF, WDT disabled
  3557                           ;	Power-up Timer Enable bit
  3558                           ;	PWRTE = 0x1, unprogrammed default
  3559                           ;	Brown-out Reset Enable bit
  3560                           ;	BOREN = 0x1, unprogrammed default
  3561                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3562                           ;	LVP = 0x1, unprogrammed default
  3563                           ;	Data EEPROM Memory Code Protection bit
  3564                           ;	CPD = 0x1, unprogrammed default
  3565                           ;	Flash Program Memory Write Enable bits
  3566                           ;	WRT = 0x3, unprogrammed default
  3567                           ;	In-Circuit Debugger Mode bit
  3568                           ;	DEBUG = 0x1, unprogrammed default
  3569                           ;	Flash Program Memory Code Protection bit
  3570                           ;	CP = 0x1, unprogrammed default
  3571     2007                     	org	8199
  3572     2007  3FFB               	dw	16379

Data Sizes:
    Strings     73
    Constant    0
    Data        3
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     18      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[5]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    _main->_clcd_print
    _main->_clcd_putch
    _read_matrix_keypad->_scan_keypad
    _init_config->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write@clcd$F100
    _clcd_print->_clcd_write@clcd$F100
    _clcd_putch->_clcd_write@clcd$F100

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    6904
                                              6 BANK0     12    12      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                        _init_config
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     203
                                              2 BANK0      2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2416
                         _clcd_print
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 BANK0      2     2      0
               _clcd_write@clcd$F100
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           2     1      1    1514
                                              4 BANK0      2     1      1
               _clcd_write@clcd$F100
 ---------------------------------------------------------------------------------
 (1) _clcd_write                                           4     3      1     978
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    1478
                                              4 BANK0      2     1      1
               _clcd_write@clcd$F100
 ---------------------------------------------------------------------------------
 (4) _clcd_write@clcd$F100                                 4     3      1     902
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0     452
                                              8 COMMON     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write@clcd$F100
   _clcd_putch
     _clcd_write@clcd$F100
   _clcd_write
   _init_config
     _clcd_print
     _init_clcd
       _init_display_controller
         _clcd_write@clcd$F100
     _init_matrix_keypad
     _init_timer0
   _read_matrix_keypad
     _scan_keypad

 _isr (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      3D       5       76.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 11 22:23:52 2023

                              pc 0002                   clcd_print@addr 004C                               l30 066E  
                             l27 058C                               l63 00BC                               l75 01DD  
                             l76 01BA                               l78 0228                               l79 0205  
                   ___awdiv@sign 0075                               fsr 0004               _init_matrix_keypad 0684  
                            l112 046F                              l201 06A7                              l115 069E  
                            l124 062C                              l109 05CA                              l118 0683  
                            l152 0365                              l161 038D                              l153 036B  
                            l170 03BB                              l162 0393                              l154 03F0  
                            l147 0693                              l171 03C7                              l163 039F  
                            l155 0377                              l180 03E9                              l172 03C1  
                            l164 0399                              l156 0371                              l177 03DD  
                            l169 03B5                              l178 03E3                              l188 0653  
                            _GIE 005F                              _RB0 0030                              _RB1 0031  
                            _RB2 0032                              _RD0 0040                              _RD1 0041  
                            _RD2 0042                              _RE1 0049                              _RD3 0043  
                            _RE2 004A                              u800 062C                              u801 062B  
                            u810 0365                              u811 0364                              u900 03B9  
                            u820 0369                              u901 03B8                              u821 0368  
                            u910 03BF                              u830 036F                              u911 03BE  
                            u831 036E                              _PSA 040B                              u920 03C5  
                            u840 0375                              u921 03C4                              u841 0374  
                            u770 0597                              u930 03DD                              u850 038D  
                            u771 0593                              u931 03DC                              u851 038C  
                            u940 03E1                              u860 0391                              u941 03E0  
                            u861 0390                              u950 03E7                              u870 0397  
                            u951 03E6                              u871 0396                              u784 059A  
                            u960 03ED                              u880 039D                              u961 03EC  
                            u881 039C                              u970 0559                              u890 03B5  
                            u795 05AC                              u971 0555                              u891 03B4  
                            u984 055C                              u995 056E                              _isr 05CB  
                 clcd_putch@addr 004C                              fsr0 0004                   clcd_putch@data 004D  
                            indf 0000           ??_clcd_write@clcd$F100 0049              ?_init_matrix_keypad 0070  
                           l1300 042C                             l1310 0468                             l1302 0435  
                           l1304 0445                             l1312 0694                             l1320 0684  
                           l1306 044C                             l1314 0697                             l1330 0692  
                           l1322 068C                             l1410 03E1                             l1402 03C5  
                           l1340 0618                             l1308 045F                             l1316 0698  
                           l1324 068D                             l1332 069F                             l1270 059A  
                           l1430 0552                             l1342 061E                             l1318 0699  
                           l1326 0690                             l1334 06A3                             l1422 03ED  
                           l1406 03CB                             l1350 0369                             l1280 05B4  
                           l1272 059D                             l1440 056A                             l1432 055C  
                           l1336 0602                             l1328 0691                             l1416 03E7  
                           l1408 03CF                             l1344 034D                             l1600 0140  
                           l1282 05B5                             l1274 059E                             l1442 0576  
                           l1434 055F                             l1338 060A                             l1290 03FC  
                           l1450 0654                             l1426 03EF                             l1370 0391  
                           l1362 0375                             l1346 0353                             l1602 014E  
                           l1284 05BC                             l1276 05A5                             l1268 0590  
                           l1444 0577                             l1436 0560                             l1292 0405  
                           l1452 0655                             l1356 036F                             l1348 0357  
                           l1460 063D                             l1700 030E                             l1620 019A  
                           l1604 0156                             l1540 0047                             l1532 0032  
                           l1286 05BF                             l1278 05A8                             l1446 057E  
                           l1438 0567                             l1294 0419                             l1454 0664  
                           l1390 03B9                             l1382 039D                             l1366 037B  
                           l1470 0649                             l1710 0333                             l1702 0316  
                           l1630 01C8                             l1622 01A0                             l1614 0171  
                           l1606 0163                             l1550 0068                             l1542 004C  
                           l1534 0037                             l1448 0581                             l1296 0420  
                           l1288 03F1                             l1376 0397                             l1368 037F  
                           l1480 0650                             l1456 0630                             l1712 0337  
                           l1704 031C                             l1640 0200                             l1632 01D4  
                           l1624 01AC                             l1616 0181                             l1608 0167  
                           l1560 0096                             l1552 006C                             l1544 0052  
                           l1536 0040                             l1298 0429                             l1386 03A3  
                           l1482 0652                             l1466 063F                             l1458 0638  
                           l1714 0339                             l1706 0322                             l1650 0252  
                           l1642 020E                             l1634 01E5                             l1626 01B5  
                           l1618 0193                             l1554 0070                             l1562 009E  
                           l1546 0059                             l1538 0045                             l1396 03BF  
                           l1388 03A7                             l1468 0644                             l1716 0340  
                           l1708 032B                             l1660 0280                             l1652 0254  
                           l1644 0213                             l1636 01EB                             l1628 01C3  
                           l1580 00EE                             l1564 00AC                             l1556 007D  
                           l1548 005E                             l1486 0672                             l1478 064B  
                           l1670 0290                             l1662 0286                             l1654 0264  
                           l1646 021F                             l1638 01F7                             l1590 010E  
                           l1582 00F4                             l1574 00C4                             l1566 00B4  
                           l1558 0087                             l1680 02BE                             l1672 0297  
                           l1664 028A                             l1656 026E                             l1648 0230  
                           l1592 0112                             l1584 00FB                             l1576 00D4  
                           l1568 00B8                             l1690 02DD                             l1682 02C7  
                           l1674 02A1                             l1666 028C                             l1658 0278  
                           l1594 011F                             l1586 0100                             l1578 00E6  
                           l1692 02E3                             l1676 02AB                             l1668 028E  
                           l1684 02CB                             l1596 0129                             l1588 010A  
                           l1694 02F0                             l1686 02D1                             l1678 02B5  
                           l1598 0138                             l1696 02F6                             l1688 02D7  
                           l1698 0305                             ?_isr 0070                             STR_1 0528  
                           STR_2 0506                             STR_3 0539                             STR_4 0517  
                           STR_5 054A                             u1000 063D                             u1001 063C  
                           _T0CS 040D                             u1010 0644                             u1011 0643  
                           u1020 0649                             u1021 0648                             u1030 0650  
                           u1031 064F                             u1200 00B8                             u1201 00B7  
                           u1210 00E6                             u1211 00E5                             u1300 01A0  
                           u1220 00EE                             u1140 0045                             u1301 019F  
                           u1221 00ED                             u1213 00E2                             u1141 0044  
                           u1310 01B5                             u1230 00F4                             u1150 004C  
                           u1311 01B4                             u1231 00F3                             u1151 004B  
                           u1400 0245                             u1320 01C3                             u1240 010E  
                           u1160 0052                             u1401 0243                             u1321 01C2  
                           u1241 010D                             u1161 0051                             u1410 0246  
                           u1330 01E5                             u1250 011F                             u1170 006C  
                           u1331 01E4                             u1251 011E                             u1171 006B  
                           u1500 0337                             u1420 0252                             u1340 01EB  
                           u1260 014E                             u1180 007D                             u1501 0336  
                           u1421 0251                             u1341 01EA                             u1261 014D  
                           u1181 007C                             u1430 0280                             u1350 0200  
                           u1270 0163                             u1190 00AC                             u1431 027F  
                           u1351 01FF                             u1271 0162                             u1255 011B  
                           u1191 00AB                             u1440 0286                             u1360 020E  
                           u1280 0193                             u1441 0285                             u1361 020D  
                           u1281 0192                             u1265 014A                             u1185 0079  
                           u1450 02D1                             u1370 0230                             u1290 019A  
                           u1451 02D0                             u1371 022F                             u1291 0199  
                           u1283 018F                             u1275 015F                             u1195 00A8  
                           u1460 02D7                             u1380 0237                             u1461 02D6  
                           u1381 0235                             u1470 02F0                             u1390 0238  
                           u1607 0564                             u1471 02EF                             u1480 0316  
                           u1617 057B                             u1537 03F7                             u1481 0315  
                           u1490 031C                             u1627 0587                             u1547 040B  
                           u1491 031B                             u1475 02EC                      main@cur_key 0058  
                           u1637 05A2                             u1557 041D                             u1647 05B9  
                           u1567 0439                             u1657 05C5                             u1577 0449  
                           u1587 045B                             u1597 046C                             _TMR0 0001  
                           _main 0032                             btemp 007E                             start 000E  
           ??_init_matrix_keypad 0048                   clcd_write@byte 004B                   clcd_write@mode 0048  
                   main@char_pos 003A                     main@edit_key 0046                            ??_isr 0078  
                          ?_main 0070                  __end_of___awdiv 04D7                  ___awdiv@divisor 0070  
                          i1l216 05F6                            i1l455 04D6                     ?_init_config 0070  
                ___awdiv@counter 0074                            _PORTD 0008                            _TRISB 0086  
                          _TRISD 0088                     ?_init_timer0 0070                            _nRBPU 040F  
             _read_matrix_keypad 062D                            _sigma 007B                            main@i 0050  
       clcd_write@clcd$F100@byte 004B         clcd_write@clcd$F100@mode 0048                            pclath 000A  
            ?_read_matrix_keypad 0070                            status 0003                            wtemp0 007E  
                   ?_scan_keypad 0070                  __initialization 0011                     __end_of_main 034D  
           ??_read_matrix_keypad 004A                           ??_main 004E                 ___awdiv@dividend 0072  
                         u110_20 04B4                           u110_21 04B3                           u110_25 04B0  
                         i1l1500 0485                           u111_25 04BC                           i1l1510 049B  
                         i1l1502 0489                           u112_20 04C8                           i1l1520 04BB  
                         i1l1512 049F                           i1l1504 048B                           u104_20 0475  
                         u112_21 04C7                           u104_21 0474                           i1l1522 04C2  
                         i1l1514 04A3                           i1l1506 0491                           i1l1516 04B4  
                         i1l1508 0494                           i1l1524 04C8                           i1l1526 04CD  
                         i1l1518 04BA                           i1l1528 04D2                           u113_20 04CD  
                         u105_20 0480                           i1l1720 05CF                           u113_21 04CC  
                         u105_21 047F                           i1l1490 0471                           i1l1722 05D4  
                         i1l1492 0475                           i1l1724 05F3                           i1l1494 047A  
                         i1l1726 05F5                           i1l1718 05CB                           u106_20 0491  
                         i1l1496 047C                           i1l1488 0470                           u106_21 0490  
                         i1l1498 0480                           u107_25 0495                           u108_20 04A3  
                         u108_21 04A2                           u109_25 04A4                           u151_20 05CF  
                         u151_21 05CE                           u152_20 05F3                           u152_21 05F2  
                         u152_25 05EF                           _TMR0IF 005A                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 03F1                        ??___awdiv 0074  
               ___awdiv@quotient 0076                           saved_w 007E          __end_of__initialization 002E  
                 __pcstackCOMMON 0070                     __pidataBANK0 06B0                       __pbssBANK0 0020  
      ??_init_display_controller 004C                       _clcd_print 05FF                       _clcd_putch 066F  
                     _clcd_write 054F                       __pmaintext 0032                       __pintentry 0004  
                     __stringtab 0500                          ___awdiv 0470                          __ptext1 062D  
                        __ptext2 034D                          __ptext3 0654                          __ptext4 069F  
                        __ptext5 0684                          __ptext6 0694                          __ptext7 03F1  
                        __ptext8 05FF                          __ptext9 054F  __end_of_init_display_controller 0470  
              __end_of_init_clcd 069F                          main@arr 0020                          main@key 0059  
                        clrloop0 06A9                          main@pos 003C                          main@pwd 0030  
           end_of_initialization 002E                 main@count_letter 0042                      ?_clcd_print 004C  
                    ?_clcd_putch 004C                      ?_clcd_write 0048                    clcd_print@str 004D  
            start_initialization 0011                     scan_keypad@i 0048           read_matrix_keypad@mode 004A  
         read_matrix_keypad@once 005C                      __end_of_isr 05FF                      __pdataBANK0 005A  
                  ??_init_config 004E                    ??_init_timer0 0048                      __pbssCOMMON 007B  
                      ___latbits 0002                    __pcstackBANK0 0048                    ??_scan_keypad 0048  
   __end_of_clcd_write@clcd$F100 05CB                         ?___awdiv 0070                        __pstrings 0500  
                      _init_clcd 0694              __end_of_init_config 066F              __end_of_init_timer0 06A8  
       ?_init_display_controller 0070                interrupt_function 0004                        clear_ram0 06A8  
                   ??_clcd_print 004D                     ??_clcd_putch 004D       __end_of_init_matrix_keypad 0694  
                   ??_clcd_write 0049              __end_of_scan_keypad 03F1                      __stringbase 0505  
                      main@flag1 0044                        main@flag2 005A                        main@count 0040  
             __end_of_clcd_print 062D               __end_of_clcd_putch 0684               __end_of_clcd_write 058D  
                     ?_init_clcd 0070            read_matrix_keypad@key 004B       __end_of_read_matrix_keypad 0654  
             __end_of__stringtab 0506                      _init_config 0654                      _init_timer0 069F  
                       __ptext10 066F                         __ptext11 058D                         __ptext12 05CB  
                       __ptext13 0470             _clcd_write@clcd$F100 058D                      _scan_keypad 034D  
                       main@i_87 0054                         main@temp 003E                         isr@count 0038  
                    ??_init_clcd 004E            ?_clcd_write@clcd$F100 0048                         intlevel1 0000  
                      stringcode 0500                         stringdir 0500                         stringtab 0500  
